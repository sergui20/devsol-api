{"version":3,"sources":["components/services.js","components/provider/index.js","components/widgets/Dropdown.js","components/widgets/Modal.js","components/header/Header.js","components/landing/TitleSection.js","components/landing/Landing.js","components/homepage/SideNav.js","components/homepage/Answers.js","components/homepage/Post.js","components/homepage/PostLayout.js","components/profile/Question.js","components/profile/Answer.js","components/profile/Profile.js","components/homepage/QuestionLayout.js","components/homepage/UsersPanel.js","components/homepage/Main.js","components/homepage/UserResults.js","components/homepage/SearchLayout.js","components/chat/ChatLayout.js","components/footer/Footer.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","name","username","email","password","body","service","post","login","getCurrentUser","get","updateCurrentUser","put","getUserLocation","position","concat","coords","latitude","longitude","getUserById","id","getUserActivity","getPublicPosts","getFeedPosts","createPost","title","content","deletePost","delete","updatePost","postInfo","objectSpread","logoutUser","createAnswer","postID","deleteAnswer","getAnswers","searchResults","data","getQuestion","addFriend","removeFriend","console","log","acceptRequest","friendID","deniedRequest","axios","create","baseURL","process","withCredentials","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","user","friendsIDs","activity","searchData","Services","then","res","setState","catch","err","handleSearchData","authenticateUser","userInfo","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Dropdown","type","class","userIcon","react","react_router_dom","to","onClick","userLogout","notificationIcon","notifications","map","notification","className","_id","messageIcon","href","Modal","ref","setForm","onSubmit","handleSubmit","htmlFor","toggleModal","Header","userDropdown","notificationDropdown","messageDropdown","loginModal","signupModal","ev","preventDefault","Service","form","FormData","target","form1","reset","context","history","push","form2","setForm1","el","setForm2","socket","io","emit","handleSearchForm","toggleDropdown","dropdown","defineProperty","modal","services","_this2","on","_this3","ReactDOM","createPortal","src","width","placeholder","widgets_Dropdown","friends","incomingRequests","widgets_Modal","document","getElementById","contextType","withRouter","TitleSection","Homepage","header_Header","landing_TitleSection","SideNav","activeClassName","Answers","owner","Post","answers","newTitle","newContent","edit","viewAnswers","togglePostInfo","sendPostInfo","newInfo","handleEditChange","sendPostID","toggleAnswers","handleAnswerForm","getPostAnswers","setAnswerForm","sertvice","onChange","answer","homepage_Answers","assign","PostLayout","togglePostForm","postForm","setPostForm","handlePostSubmit","posts","homepage_Post","Question","question","Answer","ProfileLayout","handleInputChange","resetForm","handleSubmitForm","M","Tabs","init","querySelectorAll","img","profile_Question","profile_Answer","friendsList","friend","alt","for","QuestionLayout","handleSubmitAnswer","match","params","moment","createdAt","fromNow","UsersPanel","onlineUsers","Main","feed","public","navigator","geolocation","getCurrentPosition","components","results","county","state_code","error","code","PERMISSION_DENIED","getInfo","_callee","res1","res2","res3","regenerator_default","wrap","_context","prev","next","sent","stop","_callee2","_context2","_callee3","_context3","renderHomepage","path","homepage_PostLayout","Profile","homepage_QuestionLayout","description","cb","passSearchData","homepage_SideNav","homepage_UsersPanel","UserResults","removeButton","includes","outcomingRequests","SearchLayout","users","questions","renderUserResults","homepage_UserResults","renderQuestionsResults","query","location","search","split","nextProps","ChatLayout","emitter","receiver","room","loading","userEmitter","userReceiver","t0","footer","Footer","reactDOM","Boolean","window","hostname","section1","render","provider_Provider","react_router","exact","component","Landing","Consumer","footer_Footer","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d0f1cc5.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_BASEURL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (name, username, email, password) => {\n    const body = { name, username, email, password }\n    return this.service.post('/authenticate/signup', body)\n  }\n\n  login = (username, password) => {\n    const body = {username, password}\n    return this.service.post('/authenticate/login', body)\n  }\n\n  getCurrentUser = () => {\n    return this.service.get('/authenticate/getcurrentuser')\n  }\n\n  updateCurrentUser = (name, username, email) => {\n    const body = {name, username, email}\n    return this.service.put('/authenticate/updateuser/', body)\n  }\n\n  getUserLocation = (position) => {\n    return this.service.get(`https://api.opencagedata.com/geocode/v1/json?q=${position.coords.latitude}+${position.coords.longitude}&key=614cbe4035a04205bc7d3451acfe5004`)\n  }\n\n  getUserById = (id) => {\n    return this.service.get(`/authenticate/getuser/${id}`)\n  }\n  \n  getUserActivity = (id) => {\n    return this.service.get(`/api/authenticate/getuseractivity/${id}`)\n  }\n\n  getPublicPosts = () => {\n    return this.service.get('/api/posts/public')\n  }\n\n  getFeedPosts = () => {\n    return this.service.get('/api/posts/feed')\n  }\n\n  createPost = (title, content) => {\n    const body = {title, content}\n    return this.service.post('/api/post/create', body)\n  }\n\n  deletePost = (id) => {\n    return this.service.delete(`/api/post/delete/${id}`)\n  }\n\n  updatePost = (postInfo) => {\n    const body = {...postInfo}\n    return this.service.put('/api/post/update', body)\n  }\n\n  logoutUser = () => {\n    return this.service.post('/authenticate/logout')\n  }\n\n  createAnswer = (postID, content) => {\n    const body = {post: postID, content}\n    return this.service.post('/api/answer/create', body)\n  }\n\n  deleteAnswer = (id) => {\n    return this.service.delete(`/api/answer/delete/${id}`)\n  }\n\n  getAnswers = (postID) => {\n    return this.service.get(`/api/answers/${postID}`)\n  }\n\n  searchResults = (data) => {\n    return this.service.get(`/api/serch/results/${data}`)\n  }\n\n  getQuestion = (id) => {\n    return this.service.get(`/api/post/${id}`)\n  }\n\n  addFriend = (id) => {\n    return this.service.post(`/api/friend/add/${id}`)\n  }\n\n  removeFriend = (id) => {\n    console.log('service', id)\n    return this.service.post(`/api/friend/remove/${id}`)\n  }\n\n  acceptRequest = (friendID) => {\n    return this.service.post(`/api/friend/accept/${friendID}`)\n  }\n\n  deniedRequest = (friendID) => {\n    return this.service.post(`/api/friend/denied/${friendID}`)\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport Services from '../services';\n\nexport const Context = React.createContext();\n\nexport class Provider extends Component {\n    state = {\n        user: '',\n        friendsIDs: [],\n        activity: null,\n        searchData: null\n    }\n\n    componentDidMount() {\n        this.getCurrentUser()\n    }\n\n    getCurrentUser = () => {\n        this.service = new Services();\n        this.service.getCurrentUser()\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    user: res.data.user,\n                    friendsIDs: res.data.friendsIDs\n                })\n                // () => window.dropdownTrigger()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleSearchData = (data) => {\n        this.setState({\n            searchData: data\n        })\n    }\n\n    authenticateUser = (userInfo) => {\n        this.setState({\n            user: userInfo\n        })\n    }\n\n    render() {\n        return(\n            <Context.Provider value={{\n                user: this.state.user,\n                friendsIDs: this.state.friendsIDs,\n                authenticateUser: this.authenticateUser,\n                handleSearchData: this.handleSearchData,\n                searchData: this.state.searchData,\n                getCurrentUser: this.getCurrentUser\n            }}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n","import React, {Fragment} from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Dropdown(props) {\n    return(\n        <ul id={props.type} class='dropdown-content'>\n            {\n                props.userIcon &&\n                <Fragment>\n                    <li><Link to=\"/profile\">Profile</Link></li>\n                    <li><a onClick={props.userLogout}>Logout</a></li>\n                </Fragment>\n            }\n            {\n                props.notificationIcon &&\n                <Fragment>\n                    {\n                        props.notifications.map(notification => {\n                            return (\n                                <li className=\"row no-margin\">\n                                    <div className=\"row no-margin\">\n                                        <span>{notification.name} wants to be your friend</span>\n                                    </div>\n                                    <div className=\"row no-margin\">\n                                        <div className=\"col s5\">\n                                            <button onClick={() => props.acceptRequest(notification._id)} className=\"btn-flat btn-small notif-accept-btn\"><i className=\"notif-icon material-icons\">check</i></button>\n                                        </div>\n                                        <div className=\"col s5 push-s2\">\n                                            <button onClick={() => props.deniedRequest(notification._id)} className=\"btn-flat btn-small notif-denied-btn\"><i className=\"notif-icon material-icons\">close</i></button>\n                                        </div>\n                                    </div>\n                                </li>\n                            )\n                        })                        \n                    }\n                </Fragment>\n            }\n            {\n                props.messageIcon &&\n                <Fragment>\n                    <li><a href=\"#!\">Message 1</a></li>\n                    <li><a href=\"#!\">Message 2</a></li>\n                    <li><a href=\"#!\">Message 3</a></li>\n                </Fragment>\n            }\n        </ul>\n    )\n}\n\nexport default Dropdown;\n","import React, {Fragment} from 'react';\n\nfunction Modal(props) {\n    return(\n        <div id={props.type} className=\"modal\">\n            <div className=\"modal-content\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h4 className=\"modal-title\">{props.title}</h4> \n                    </div>\n                </div>\n\n                <div className=\"container\">\n                    <div class=\"row\">\n                        <form ref={props.setForm} id={props.type} class=\"col s12\" onSubmit={props.handleSubmit}>\n                            {\n                                props.signup ?\n                                <Fragment>\n                                    <div class=\"row no-margin\">\n                                        <div class=\"input-field col s12\">\n                                            <input id=\"name\" type=\"text\" name=\"name\" class=\"validate\" />\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                    </div>\n                                    <div class=\"row no-margin\">\n                                        <div class=\"input-field col s12\">\n                                            <input id=\"username\" type=\"text\" name=\"username\" class=\"validate\" />\n                                            <label htmlFor=\"username\">Username</label>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"row no-margin\">\n                                        <div class=\"input-field col s12\">\n                                            <input id=\"email\" type=\"email\" name=\"email\" class=\"validate\" />\n                                            <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                    </div>\n                                </Fragment>\n                                :\n                                <div class=\"row no-margin\">\n                                    <div class=\"input-field col s12\">\n                                        <input id=\"ename\" type=\"text\" name=\"username\" class=\"validate\" />\n                                        <label htmlFor=\"ename\">Email or username</label>\n                                    </div>\n                                </div>\n                            }\n\n                            <div class=\"row no-margin\">\n                                <div class=\"input-field col s12\">\n                                    <input id=\"password\" type=\"password\" name=\"password\" class=\"validate\" />\n                                    <label htmlFor=\"password\">Password</label>\n                                </div>\n                            </div>\n                            <div className=\"row no-margin\">\n                                <div className=\"col s12 center-align\">\n                                    <div className=\"row\">\n                                        <div className=\"col s12\">\n                                            <button className=\"btn modal-close\">Submit</button>\n                                        </div>\n                                    </div>\n                                    {\n                                        props.signup ?\n                                        <div className=\"row\">\n                                            <div className=\"col s12\">\n                                                <span>Or</span>\n                                                <a href=\"http://localhost:8080/auth/github\" className=\"btn\">Signup with Github</a>\n                                            </div>\n                                        </div>\n                                        :\n                                        <div className=\"row\">\n                                            <div className=\"col s12\">\n                                                <span>Or</span>\n                                                <a href=\"http://localhost:8080/auth/github\" className=\"btn\">Login with Github</a>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a onClick={props.toggleModal} className=\"waves-effect waves-green btn-flat\">Close</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {withRouter, Link} from 'react-router-dom';\nimport {Context} from '../provider/index';\nimport Service from '../services';\n\nimport Dropdown from '../widgets/Dropdown';\nimport Modal from '../widgets/Modal';\n\nimport io from 'socket.io-client';\n\nimport './header.css';\n\nclass Header extends Component {\n    state = {\n        userDropdown: false,\n        notificationDropdown: false,\n        messageDropdown: false,\n        loginModal: false,\n        signupModal: false,\n        // notifications: []\n    }\n\n    componentDidMount() {\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n        this.socket.on('friendNotification', (notifications) => {\n            // const myNotifications = notifications.filter( notification => {\n            //     return notification.userReceiver === this.context.user._id\n            // })\n\n            this.context.getCurrentUser()\n        })\n    }\n\n    static contextType = Context\n\n\n    handleSubmit = (ev) => {\n        ev.preventDefault();\n        this.service = new Service();\n        const form  = new FormData(ev.target);\n        const name = form.get('name');\n        const username = form.get('username');\n        const email = form.get('email')\n        const password = form.get('password');\n        const ename = form.get('ename');\n\n        if(ev.target.id === \"modal1\") {\n            this.service.login(username, password)\n                .then(res => {\n                    this.form1.reset();\n                    this.context.authenticateUser(res.data.user)\n                    this.props.history.push('/feed')\n                    // window.dropdownTrigger()\n                })\n                .catch( err => {\n                    console.log(err)\n                })\n        } else {\n            this.service.signup(name, username, email, password)\n                .then( res => {\n                    this.form2.reset();\n                    this.context.authenticateUser(res.data.user)\n                    this.props.history.push('/feed')\n                    // window.dropdownTrigger()\n                    // window.tabs()\n                })\n                .catch( err => {\n                    console.log(err)\n                })\n        }\n    }\n\n    setForm1 = (el) => {\n        this.form1 = el\n    }\n\n    setForm2 = (el) => {\n        this.form2 = el\n    }\n\n    userLogout = () => {\n        this.service = new Service();\n        this.service.logoutUser()\n            .then( (res) => {\n                this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n                // this.socket.on('connect', () => {\n                //     this.socket.emit('web:online', this.context.user)\n                // })\n                this.socket.emit('logoutEvent', this.context.user)\n                this.context.authenticateUser('');\n                // window.modalTrigger()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleSearchForm = (ev) => {\n        ev.preventDefault();\n        const form = new FormData(ev.target);\n        const data = form.get('search');\n        // this.context.handleSearchData(data)\n        this.props.history.push(`/search?q=${data}`)\n        this.context.getCurrentUser()\n    }\n\n    toggleDropdown = (dropdown) => {\n        this.setState({\n            [dropdown]: !(this.state[dropdown])\n        })\n    }\n\n    toggleModal = (modal) => {\n        this.setState({\n            [modal]: !(this.state[modal])\n        })\n    }\n\n    acceptRequest = (friendID) => {\n        this.services = new Service();\n        this.services.acceptRequest(friendID)\n            .then(res => {\n                this.context.getCurrentUser()\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    deniedRequest = (friendID) => {\n        this.services = new Service();\n        this.services.deniedRequest(friendID)\n            .then(res => {\n                this.context.getCurrentUser()\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return  ReactDOM.createPortal(\n            <nav>\n                <div className=\"my-container full-height\">\n                    <div className=\"row no-margin full-height\">\n                        <div className=\"col s2 full-height logo-container\">\n                            <Link to=\"/\" className=\"title-link\">\n                                <img src=\"/assets/logo2.png\" width=\"100px\" />\n                            </Link>\n                        </div>\n                        <form className=\"col s7 no-margin full-height vertical-align\" onSubmit={this.handleSearchForm}>\n                            <input placeholder=\"Search\" className=\"search-input\" type=\"text\" name=\"search\" />\n                        </form>\n                        <div className=\"col s3\">\n                            {\n                                this.context.user ?\n                                <ul className=\"nav-ul\">\n                                    <li><a onClick={() => this.toggleDropdown('userDropdown')} className='btn my-btn'><i className=\"material-icons\">person</i></a></li>\n                                    <li><a onClick={() => this.toggleDropdown('notificationDropdown')} className='btn my-btn'><i className=\"material-icons\">notifications</i></a></li>\n                                    <li><a onClick={() => this.toggleDropdown('messageDropdown')} className='btn my-btn'><i className=\"material-icons\">mail</i></a></li>\n                                    {\n                                        this.state.userDropdown &&\n                                        <Dropdown type=\"userDropdown\" userIcon userLogout={this.userLogout}  />\n                                    }\n                                    {\n                                        this.state.notificationDropdown &&\n                                        <Dropdown type=\"notificationDropdown\" notificationIcon notifications={this.context.user.friends.incomingRequests} acceptRequest={this.acceptRequest} deniedRequest={this.deniedRequest} />\n                                    }\n                                    {\n                                        this.state.messageDropdown &&\n                                        <Dropdown type=\"messageDropdown\" messageIcon />\n                                    }\n                                </ul>\n                                :\n                                <ul className=\"nav-ul\">\n                                    <li><a onClick={() => this.toggleModal('loginModal')} className=\"btn modal-trigger\">Login</a></li>\n                                    <li><a onClick={() => this.toggleModal('signupModal')} className=\"btn modal-trigger\">Signup</a></li>\n                                    {\n                                        this.state.loginModal &&\n                                        <Modal type=\"modal1\" title=\"Login\" login handleSubmit={this.handleSubmit} setForm={this.setForm1} toggleModal={() => this.toggleModal('loginModal')} />\n                                    }\n                                    {\n                                        this.state.signupModal &&\n                                        <Modal type=\"modal2\" title=\"Signup\" signup handleSubmit={this.handleSubmit} setForm={this.setForm2} toggleModal={() => this.toggleModal('signupModal')} />\n                                    }\n                                </ul>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </nav>,\n            document.getElementById('header')\n        )\n    }\n}\n\nexport default withRouter(Header);\n","import React from 'react';\n\nfunction TitleSection() {\n    return (\n        <div className=\"row titles-row no-margin\">\n            <div className=\"col s12 titles-container\">\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <h1 className=\"main-title\">DevSol</h1>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <h3 className=\"main-subtitle\">Connect, Share, and Grow</h3>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col s5\">\n                        <p className=\"main-p\">DevSol is an open community for developers around the world. We help you to have INSTANT solutions to any of your coding questions, connect with developers, and grow together</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TitleSection;","import React, { Component, Fragment } from 'react';\nimport Header from '../header/Header';\nimport TitleSection from './TitleSection';\n\nclass Homepage extends Component {\n    render() {\n        return(\n            <Fragment>\n                <Header />\n\n                <TitleSection />\n                {/* <Modal type=\"modal1\" title=\"Login\" login handleSubmit={this.handleSubmit} setForm={this.setForm1} />\n                <Modal type=\"modal2\" title=\"Signup\" signup handleSubmit={this.handleSubmit} setForm={this.setForm2} /> */}\n\n                {/* <Dropdown type=\"userDropdown\" userIcon />\n                <Dropdown type=\"notificationDropdown\" notificationIcon />\n                <Dropdown type=\"messageDropdown\" messageIcon /> */}\n            </Fragment>\n        )\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction SideNav() {\n    return (\n        <div className=\"col s2 my-sidenav top-space\">\n            <div className=\"row\">\n                <NavLink to=\"/feed\" activeClassName=\"is-active\" className=\"col s12 btn-flat sidenav-link\">Feed</NavLink>\n            </div>\n\n            <div className=\"row\">\n                <NavLink to=\"/public\" activeClassName=\"is-active\" className=\"col s12 btn-flat sidenav-link\">Public</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default SideNav;","import React from 'react';\n\nfunction Answers(props) {\n    return (\n        <div className=\"row answer-row\">\n            <div className=\"row no-margin vertical-align\">\n                <div className=\"col s11\">\n                    <p>{props.content}</p>\n                </div>\n                <div className=\"col s1\"><button className=\"btn-flat\" onClick={() => props.deleteAnswer(props._id)}><i class=\"material-icons\">delete</i></button></div>\n            </div>\n\n            <div className=\"row no-margin\">\n                <div className=\"col s4 push-s8 right-align\">Answered by: {props.owner.name}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Answers;","import React, { Component, Fragment } from 'react';\nimport {Link} from 'react-router-dom';\nimport { Context } from '../provider/index';\n\nimport Answers from './Answers';\n\nimport Services from '../services';\n\nclass Post extends Component {\n    static contextType = Context\n\n    state = {\n        post: this.props.post,\n        answers: this.props.post.answers,\n        newTitle: this.props.post.title,\n        newContent: this.props.post.content,\n        edit: false,\n        viewAnswers: false\n    }\n\n    togglePostInfo = () => {\n        this.setState({\n            edit: !this.state.edit\n        })\n    }\n\n    sendPostInfo = () => {\n        const newInfo = {\n            id: this.state.post._id,\n            title: this.state.newTitle,\n            content: this.state.newContent\n        }\n        this.props.updatePost(newInfo, () => {\n            this.setState({\n                edit: false,\n                post: {...this.state.post, title: this.state.newTitle, content: this.state.newContent}\n            })\n        })\n    }\n    \n    handleEditChange = (ev) => {\n        this.setState({\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    sendPostID = () => {\n        this.props.deletePost(this.state.post._id)\n    }\n\n    toggleAnswers = () => {\n        this.setState({\n            viewAnswers: !this.state.viewAnswers\n        })\n    }\n\n    handleAnswerForm = (ev) => {\n        ev.preventDefault();\n        this.service = new Services();\n        const form = new FormData(ev.target);\n        const content = form.get('answer')\n\n        this.service.createAnswer(this.state.post._id, content)\n            .then( res => {\n                this.form.reset();\n                this.getPostAnswers()\n            })\n            .catch( err => {\n                console.log(err)\n            })\n    }\n\n    setAnswerForm = (el) => {\n        this.form = el\n    }\n\n    getPostAnswers = () => {\n        this.service = new Services();\n        this.service.getAnswers(this.state.post._id)\n            .then( res => {\n                console.log(res)\n                this.setState({\n                    answers: res.data.answers\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    deleteAnswer = (id) => {\n        this.sertvice = new Services();\n        this.sertvice.deleteAnswer(id)\n            .then(res => {\n                this.getPostAnswers()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return(\n            <div className=\"row post-card\">\n                <div className=\"col s12\">\n                    <div className=\"row no-margin\">\n                        <div className=\"col s10\">\n                            {\n                                this.state.edit ?\n                                <input name=\"newTitle\" value={this.state.newTitle} onChange={this.handleEditChange}></input>\n                                :\n                                <Link to={`/question/${this.state.post._id}`}>\n                                    <p className=\"post-title\">{this.state.post.title}</p>\n                                </Link>\n                            }\n                        </div>\n                        {\n                            this.context.user && (\n                                this.context.user._id === this.props.post.owner._id && (\n                                    <Fragment>\n                                        <div className=\"col s1\">\n                                            <button className=\"btn-flat\" onClick={this.togglePostInfo}><i class=\"material-icons\">edit</i></button>\n                                        </div>\n\n                                        <div className=\"col s1\">\n                                            <button className=\"btn-flat\" onClick={this.sendPostID}><i class=\"material-icons\">delete</i></button>\n                                        </div>\n                                    </Fragment>\n                                )\n                            )\n                        }\n                    </div>\n\n                    <div className=\"row no-margin\">\n                        <div className=\"col s12\">\n                            {\n                                this.state.edit ?\n                                <textarea name=\"newContent\" value={this.state.newContent} onChange={this.handleEditChange}></textarea>\n                                :\n                                <p>{this.state.post.content}</p>\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"vertical-align\">\n                            <div className=\"col s4 no-margin\">\n                                <button onClick={this.toggleAnswers} className=\"btn-flat vertical-align\"> <i class=\"material-icons\">keyboard_arrow_down</i>{this.state.viewAnswers ? 'Hide Answers' : 'Answers'}</button>\n                            </div>\n                            <div className=\"col s5 push-s3 center-align no-margin\">\n                                <p><b>Asked by: </b>{this.props.post.owner.name}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    {\n                        this.state.edit &&\n                        <div className=\"row\">\n                            <div className=\"col s2 push-s8\">\n                                <button className=\"btn-flat\" onClick={this.togglePostInfo}>Cancel</button>\n                            </div>\n\n                            <div className=\"col s2 push-s8\">\n                                <button className=\"btn\" onClick={this.sendPostInfo}>Update</button>\n                            </div>\n                        </div>\n                    }\n\n                    {\n                        this.state.viewAnswers &&\n                        <Fragment>\n                            <div className=\"container answers-container\"> \n                                {\n                                    this.state.answers.map( answer => <Answers {...answer} deleteAnswer={this.deleteAnswer} />)\n                                }\n                            </div>\n\n                            <div className=\"row no-margin form-answer-container\">\n                                <form ref={this.setAnswerForm} className=\"col s12\" onSubmit={this.handleAnswerForm}>\n                                    <div className=\"row\">\n                                        <div className=\"col s10\">\n                                            <input className=\"answer-input\" name=\"answer\"></input>\n                                        </div>\n\n                                        <div className=\"col s2\">\n                                            <button className=\"btn answer-button\">Answer</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </Fragment>\n                    }\n                </div>\n            </div>\n        )   \n    }\n}\n\nexport default Post;","import React from 'react';\n\nimport Post from './Post';\n\nfunction PostLayout(props) {\n    return(\n        <div className=\"col s7 top-space\">\n            <div className=\"row vertical-align\">\n                <div className=\"col s9\">\n                    <h2 className=\"public-questions-title\">Top Questions</h2>\n                </div>\n                <div className=\"col s3\">\n                    <button className=\"btn\" onClick={props.togglePostForm}>\n                        {props.postForm ? 'Hide Form' : 'Ask Question'}\n                    </button>\n                </div>\n            </div>\n            {\n                props.postForm &&\n                <div class=\"row\">\n                    <form ref={props.setPostForm} class=\"col s12\" onSubmit={props.handlePostSubmit}>\n                        <div class=\"row no-margin\">\n                            <div class=\"input-field col s12\">\n                                <input id=\"title\" type=\"text\" name=\"title\" />\n                                <label htmlFor=\"title\">Title</label>\n                            </div>\n                        </div>\n\n                        <div class=\"row no-margin\">\n                            <div class=\"input-field col s12\">\n                                <input id=\"description\" type=\"text\" name=\"description\" />\n                                <label htmlFor=\"description\">Description</label>\n                            </div>\n                        </div>\n\n                        <div className=\"row no-margin\">\n                             <div className=\"col s12 right-align\">\n                                <button className=\"btn\">Post</button>\n                             </div>\n                        </div>\n                    </form>\n                </div>\n            }\n            {\n                props.posts.map( (el) => <Post key={el._id}  post={el} updatePost={props.updatePost} deletePost={props.deletePost} />)\n            }\n        </div>\n    )\n}\n\nexport default PostLayout;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Question extends Component {\n    state = {\n        question: this.props.question\n    }\n\n    render() {\n        return (\n            <div className=\"row no-margin activity-results-div\">\n                <div className=\"col s12\">\n                    <Link to={`/question/${this.props.question._id}`}>{this.props.question.title}</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Question","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Answer extends Component {\n    state = {\n        answer: this.props.answer\n    }\n\n    render() {\n        return (\n            <div className=\"row no-margin activity-results-div\">\n                <div className=\"col s12\">\n                    <Link to={`/question/${this.props.answer.post}`}>{this.props.answer.content}</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Answer","import React, {Component} from 'react';\nimport { Context } from '../provider/index';\nimport Question from './Question';\nimport Answer from './Answer';\nimport M from 'materialize-css';\nimport Services from '../services';\n\nclass ProfileLayout extends Component {\n    static contextType = Context;\n\n    state = {\n        name: this.context.user.name,\n        username: this.context.user.username,\n        email: this.context.user.email\n    }\n\n    componentDidMount() {\n        M.Tabs.init(document.querySelectorAll('.tabs'));\n        M.Modal.init(document.querySelectorAll('.modal'));\n    }\n\n    handleInputChange = (ev) => {\n        this.setState({\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    resetForm = () => {\n        this.setState({\n            name: this.context.user.name,\n            username: this.context.user.username,\n            email: this.context.user.email\n        })\n    }\n\n    handleSubmitForm = (ev) => {\n        ev.preventDefault()\n        this.services = new Services();\n        this.services.updateCurrentUser(this.state.name, this.state.username, this.state.email)\n            .then( res => {\n                this.context.getCurrentUser()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return(\n            <div className=\"col s7 top-space\">\n                <div className=\"row\">\n                    <div className=\"col s4 center-align\">\n                        <img src={this.context.user.img} width=\"120px\" />\n                    </div>\n\n                    <div className=\"col s6\">\n                        <h3 className=\"no-margin\">{this.context.user.name}</h3>\n                        <p><b>Username: </b>{this.context.user.username}</p>\n                        <p><i class=\"material-icons\">location_on</i>Miami</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s9\">\n                        <ul className=\"tabs\">\n                            <li className=\"tab col s4\"><a className=\"active no-padding\" href=\"#questions\">Questions</a></li>\n                            <li className=\"tab col s4\"><a className=\"no-padding\" href=\"#answers\">Answers</a></li>\n                            <li className=\"tab col s4\"><a className=\"no-padding\" href=\"#friends\">Friends</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col s3 right-align\">\n                        <a className=\"btn modal-trigger\" href=\"#edit-modal\">Edit Profile</a>\n                    </div>\n                    <div id=\"questions\" className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"col s6\">\n                                <h4>Your Questions</h4>\n                                {\n                                    this.props.activity && this.props.activity.posts.map( post => <Question question={post} />)\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"answers\" className=\"col s12\">\n                        <h4>Your Answers</h4>\n                        {\n                            this.props.activity && this.props.activity.answers.map( answer => <Answer answer={answer} />)\n                        }\n                    </div>           \n                    <div id=\"friends\" className=\"col s12\">\n                        <ul class=\"row collection users-collection friends-ul\">\n                            {\n                                this.context.user.friends.friendsList.length > 0 ? (\n                                this.context.user.friends.friendsList.map(friend => {\n                                    return (\n                                        <li className=\"col s5 collection-item avatar friends-card\">\n                                            <img src={friend.img} alt=\"\" className=\"circle friends-img\" />\n                                            <span className=\"title\">{friend.username}</span>\n                                        </li>\n                                    )\n                                }))\n                                :\n                                <span>No Friends</span>\n                            }\n                        </ul> \n                    </div>                \n                </div>\n                <div id=\"edit-modal\" className=\"modal\">\n                    <div className=\"modal-content\">\n                        <div className=\"row\">\n                            <div className=\"col s12\">\n                                <h5>Edit your profile</h5>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <form id=\"edit-form\" className=\"col s12\" onSubmit={this.handleSubmitForm}>\n                                <div className=\"row no-margin\">\n                                    <div className=\"input-field col s12\">\n                                        <input id=\"name\" type=\"text\" name=\"name\" className=\"validate\" value={this.state.name} onChange={this.handleInputChange} />\n                                        <label id=\"name-label\" for=\"name\" className=\"active\">Name</label>\n                                    </div>\n                                </div>\n\n                                <div className=\"row no-margin\">\n                                    <div className=\"input-field col s12\">\n                                        <input id=\"username\" type=\"text\" name=\"username\" className=\"validate\" value={this.state.username} onChange={this.handleInputChange} />\n                                        <label id=\"username-label\" for=\"username\" className=\"active\">Username</label>\n                                    </div>\n                                </div>\n\n                                <div className=\"row no-margin\">\n                                    <div className=\"input-field col s12\">\n                                        <input id=\"email\" type=\"email\" name=\"email\" className=\"validate\" value={this.state.email} onChange={this.handleInputChange} />\n                                        <label id=\"email-label\" for=\"email\" className=\"active\">Email</label>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button className=\"modal-close btn-flat\" onClick={this.resetForm}>Cancel</button>\n                        <button form=\"edit-form\" className=\"modal-close btn\">Submit</button>\n                    </div>\n                </div>\n            </div> \n        )\n    }\n}\n\nexport default ProfileLayout;\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Services from '../services';\nimport moment from 'moment';\n\nclass QuestionLayout extends Component {\n    state = {\n        _id: '',\n        title: '',\n        content: '',\n        owner: '',\n        answers: []\n    }\n\n    componentDidMount() {\n        this.service = new Services();\n        this.service.getQuestion(this.props.match.params.id)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    _id: res.data.post._id,\n                    title: res.data.post.title,\n                    content: res.data.post.content,\n                    owner: res.data.post.owner.name,\n                    answers: res.data.post.answers\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    getPostAnswers = () => {\n        this.service = new Services();\n        this.service.getAnswers(this.state._id)\n            .then( res => {\n                this.setState({\n                    answers: res.data.answers\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    \n    handleSubmitAnswer = (ev) => {\n        ev.preventDefault();\n        this.services = new Services();\n        const form = new FormData(ev.target);\n        const content = form.get('answer')\n\n        this.service.createAnswer(this.state._id, content)\n        .then( res => {\n            this.form.reset();\n            this.getPostAnswers()\n        })\n        .catch( err => {\n            console.log(err)\n        })\n    }\n\n    setForm = (el) => {\n        this.form = el;\n    }\n\n    render() {\n        return (\n            <div className=\"col s7 top-space\">\n                <div className=\"row\">\n                    <div className=\"row no-margin\">\n                        <div className=\"col s12\">\n                            <h3>{this.state.title}</h3>\n                        </div>\n                    </div>\n                    <div className=\"row no-margin\">\n                        <div className=\"col s12 right-align\">\n                            <span>{moment(this.state.createdAt).fromNow()}</span>\n                        </div>\n                    </div>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <p>{this.state.content}</p>\n                        </div>\n                    </div>\n    \n                    <div className=\"row\">\n                        <div className=\"row\">\n                            <div className=\"col s12 right-align\">\n                                <span><b>Asked by: </b>{this.state.owner}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"row no-margin answers-title-row\">\n                        <div className=\"col s12\">\n                            <p>{this.state.answers.length} Answers</p>\n                        </div>\n                    </div>\n    \n                    <div className=\"row full-width\">\n                        {\n                            this.state.answers.map( answer => {\n                                return (\n                                    <div className=\"col s12 answers-row\">\n                                        <div className=\"row no-margin\">\n                                            <div className=\"col s12\">\n                                                <p>{answer.content}</p>\n                                            </div>\n                                        </div>\n    \n                                        <div className=\"row no-margin\">\n                                            <div className=\"col s12 right-align\">\n                                                <span><b>Answered by: </b>{answer.owner.name}</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <h4>Your Answer</h4>\n                        </div>\n                    </div>\n    \n                    <div className=\"row\">\n                        <form ref={this.setForm} className=\"col s12\" onSubmit={this.handleSubmitAnswer}>\n                            <div className=\"row\">\n                                <div className=\"col s12\">\n                                    <textarea name=\"answer\" className=\"answer-textarea\"></textarea>\n                                </div>\n                            </div>\n    \n                            <div className=\"row\">\n                                <div className=\"col s12\">\n                                    <button className=\"btn\">Answer</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(QuestionLayout);","import React, {Component} from 'react';\nimport {Context} from '../provider/index';\nimport { Link } from 'react-router-dom';\n\nimport io from 'socket.io-client';\n\nclass UsersPanel extends Component {\n    state = {\n        onlineUsers: []\n    }\n\n    static contextType = Context;\n\n    componentDidMount() {\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n        this.socket.on('connect', () => {\n            this.socket.emit('web:online', this.context.user)\n        })\n        this.socket.on('loginEvent', (onlineUsers) => {\n            this.setState({\n                onlineUsers\n            })\n        })\n        this.socket.on('userDisconnect', (onlineUsers) => {\n            this.setState({\n                onlineUsers\n            })\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"col s3 top-space\">\n                <div className=\"row no-margin\">\n                    <div className=\"col s11 push-s1 center-align users-panel\">\n                        <div className=\"row no-margin user-box-title\">\n                            <div className=\"col s12\">\n                                <span>Connected users</span>\n                            </div>\n                        </div>\n    \n                        <div className=\"row\">\n                            <div className=\"col s12\">\n                                <ul class=\"collection users-collection\">\n                                    {\n                                        this.state.onlineUsers.map( user => {\n                                            return (\n                                                <li class=\"collection-item avatar\">\n                                                    <img src={user.img} alt=\"\" class=\"circle\" />\n                                                    {\n                                                        this.context.user._id === user.id ?\n                                                        <span class=\"title\">{user.name} (Me)</span>\n                                                        :\n                                                        <span class=\"title\">{user.name}</span>\n                                                    }\n                                                    <p className=\"online-text\">online</p>\n                                                    <Link to={`/chat/${this.context.user._id}/${user.id}`} class=\"secondary-content\"><i className=\"material-icons send-icon\">send</i></Link>\n                                                </li>\n                                            )\n                                        })\n                                    }\n                                    {/* <li class=\"collection-item avatar\">\n                                        <i class=\"material-icons circle\">folder</i>\n                                        <span class=\"title\">Title</span>\n                                        <p>First Line</p>\n                                        <Link to={`/chat/${this.context.user._id}/5d426ffdcd6387450240c352`} class=\"secondary-content\"><i class=\"material-icons\">send</i></Link>\n                                    </li>\n                                    <li class=\"collection-item avatar\">\n                                        <i class=\"material-icons circle green\">insert_chart</i>\n                                        <span class=\"title\">Title</span>\n                                        <p>First Line</p>\n                                        <Link to={`/chat/${this.context.user._id}/5d426ffdcd6387450240c352`} class=\"secondary-content\"><i class=\"material-icons\">send</i></Link>\n                                    </li>\n                                    <li class=\"collection-item avatar\">\n                                        <i class=\"material-icons circle red\">play_arrow</i>\n                                        <span class=\"title\">Title</span>\n                                        <p>First Line</p>\n                                        <Link to={`/chat/${this.context.user._id}/5d426ffdcd6387450240c352`} class=\"secondary-content\"><i class=\"material-icons\">send</i></Link>\n                                    </li> */}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UsersPanel;","import React, { Component, Fragment } from 'react';\nimport Service from '../services';\nimport { Context } from '../provider/index';\nimport axios from 'axios';\n\nimport Header from '../header/Header';\nimport SideNav from './SideNav';\nimport PostLayout from './PostLayout';\nimport ProfileLayout from '../profile/Profile';\nimport QuestionLayout from './QuestionLayout';\nimport UsersPanel from './UsersPanel';\n\nclass Main extends Component {\n    state = {\n        feed: [],\n        public: [],\n        postForm: false,\n        activity: null\n    }\n\n    static contextType = Context\n\n    getUserLocation =  () => {\n        if (navigator.geolocation) {\n            this.service = new Service();\n            navigator.geolocation.getCurrentPosition( (position) => {\n\n                axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${position.coords.latitude}+${position.coords.longitude}&key=614cbe4035a04205bc7d3451acfe5004`)\n                    .then(res => {\n                        const components = res.data.results[0].components\n\n                        const county = components.county\n                        const state = components.state_code\n                        console.log(res)\n                        // this.setState({\n                        //     location: {\n                        //         county,\n                        //         state\n                        //     },\n                        //     loading: false\n                        // })\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            }, (error) => {\n                if (error.code == error.PERMISSION_DENIED) {\n                    // this.setState({\n                    //     location: null,\n                    //     loading: false\n                    // })\n\n                    console.log(\"You denied Geolocation\")\n                }\n            })  \n\n        } else {\n            console.log('Geolocation is not supported');\n        }\n        \n    }\n\n    componentDidMount() {\n        this.getInfo()\n        // this.getUserLocation()\n        // window.dropdownTrigger()\n    }\n\n    getInfo = async () => {\n        this.service = new Service()\n        const res1 = await this.service.getFeedPosts();\n        const res2 = await this.service.getPublicPosts();\n        if(this.context.user) {\n            const res3 = await this.service.getUserActivity(this.context.user._id)\n            console.log('feed posts', res1.data)\n            this.setState({\n                feed: res1.data.posts,\n                public: res2.data.posts,\n                activity: res3.data.activity\n            })\n        }\n        this.setState({\n            feed: res1.data.posts,\n            public: res2.data.posts\n        })\n    }\n\n    getFeedPosts = async () => {\n        this.service = new Service()\n        const res = await this.service.getFeedPosts();\n        this.setState({\n            feed: res.data.posts,\n            postForm: false\n        })\n    }\n\n    getPublicPosts = async () => {\n        this.service = new Service()\n        const res = await this.service.getPublicPosts();\n        this.setState({\n            public: res.data.posts,\n            postForm: false\n        })\n    }\n    \n    renderHomepage = () => {\n        if(this.props.match.path === \"/feed\") {\n            return <PostLayout posts={this.state.feed} postForm={this.state.postForm} togglePostForm={this.togglePostForm} setPostForm={this.setPostForm} handlePostSubmit={this.handlePostSubmit} updatePost={this.updatePost} deletePost={this.deletePost} />\n        } else if(this.props.match.path === \"/public\") {\n            return <PostLayout posts={this.state.public} postForm={this.state.postForm} togglePostForm={this.togglePostForm} setPostForm={this.setPostForm} handlePostSubmit={this.handlePostSubmit} updatePost={this.updatePost} deletePost={this.deletePost} />\n        } else if(this.props.match.path === \"/profile\") {\n            return <ProfileLayout activity={this.state.activity} />\n        } else if(this.props.match.path === \"/question/:id\") {\n            return <QuestionLayout />\n        }\n    }\n\n    togglePostForm = () => {\n        this.setState({\n            postForm: !this.state.postForm\n        })\n    }\n\n    handlePostSubmit = (ev) => {\n        ev.preventDefault();\n        this.service = new Service()\n\n        const form = new FormData(ev.target);\n        const title = form.get('title');\n        const description = form.get('description');\n\n        this.service.createPost(title, description)\n            .then( res => {\n                if(this.props.match.path === \"/feed\") {\n                    this.postForm.reset()\n                    this.getFeedPosts()\n                } else if(this.props.match.path === \"/public\") {\n                    this.postForm.reset()\n                    this.getPublicPosts()\n                }\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    setPostForm = (el) => {\n        this.postForm = el;\n    }\n\n    updatePost = (postInfo, cb) => {\n        this.service = new Service();\n        this.service.updatePost(postInfo)\n            .then( res => {\n                if(this.props.match.path === \"/feed\") {\n                    cb()\n                }\n\n                if(this.props.match.path === \"/public\") {\n                    cb()\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    deletePost = (id) => {\n        this.service = new Service()\n        this.service.deletePost(id)\n            .then( res => {\n                if(this.props.match.path === \"/feed\") {\n                    this.getFeedPosts()\n                }\n\n                if(this.props.match.path === \"/public\") {\n                    this.getPublicPosts()\n                }\n            } )\n    }\n    \n    render() {\n        return (\n            <Fragment>\n                <Header passSearchData={this.passSearchData} />\n                <div className=\"my-container\">\n                    <div className=\"row\">\n                        <SideNav />\n\n\n                        {this.renderHomepage()}\n\n                        <UsersPanel />\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default Main;\n","import React, {Component} from 'react';\nimport io from 'socket.io-client';\nimport Services from '../services';\nimport { Context } from '../provider';\n\nclass UserResults extends Component {\n    state = {\n        user: this.props.user,\n        removeButton: false\n    }\n\n    static contextType = Context;\n\n    addFriend = () => {\n        this.services = new Services();\n        this.services.addFriend(this.state.user._id)\n            .then(res => {\n                // In here I dont need to update, because you are waiting the response\n                this.socket.emit('newFriendRequest', {user: this.context.user, friend: this.state.user})\n                this.setState({\n                    removeButton: true\n                })\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    removeFriend = () => {\n        console.log(this.state.user._id)\n        this.services = new Services();\n        this.services.removeFriend(this.state.user._id)\n            .then( res => {\n                // This is for updating my friend list\n                // this.context.getCurrentUser()\n                console.log(res)\n                this.socket.emit('removedFriendRequest', {user: this.context.user, friend: this.state.user})\n                this.setState({\n                    removeButton: false\n                })\n            })\n            .catch( err => {\n                console.log(err)\n            })\n    }\n\n    componentDidMount() {\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n    }\n\n    render() {\n        return (\n            <ul className=\"collection col s6\">\n                <li className=\"collection-item avatar\">\n                    <img src={this.state.user.img} alt=\"\" className=\"circle\" />\n                    <span className=\"title\">{this.state.user.name}</span>\n                    <p>{this.state.user.username}</p>\n                    {\n                        this.context.user && this.context.friendsIDs && (\n                            this.context.friendsIDs.includes(this.state.user._id) || this.state.removeButton || this.context.user.friends.outcomingRequests.includes(this.state.user._id) ?\n                            <button onClick={this.removeFriend} className=\"btn-flat secondary-content\">Remove</button>\n                            :\n                            <button onClick={this.addFriend} className=\"btn-flat secondary-content\">Add</button>\n                        )\n                    }\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default UserResults;","import React, {Component, Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Context} from '../provider/index';\nimport Services from '../services';\n\nimport Header from '../header/Header';\nimport SideNav from './SideNav';\nimport UsersPanel from './UsersPanel';\nimport UserResults from './UserResults';\n\nclass SearchLayout extends Component {\n    state = {\n        users: null,\n        questions: null\n    }\n\n    static contextType = Context\n\n    searchResults = (data) => {\n        this.services = new Services()\n        this.services.searchResults(data)\n            .then( res => {\n                this.setState({\n                    users: res.data.users,\n                    questions: res.data.questions\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    renderUserResults = () => {\n        if(this.state.users) {\n            return this.state.users.map( (user) => {\n                if(this.context.user) {\n                    if(user._id !== this.context.user._id) {\n                        return (\n                            <UserResults key={user._id} user={user} />\n                        )\n                    }\n                } else {\n                    return (\n                        <UserResults key={user._id} user={user} />\n                    )\n                }\n            })\n        }\n    }\n\n    renderQuestionsResults = () => {\n        if(this.state.questions) {\n            return this.state.questions.map( question => {\n                return (\n                    <Link to={`/question/${question._id}`}>\n                        <div class=\"collection col s11 push-s1 question-result-card\">\n                            <span class=\"title search-question-title\">{question.title}</span>\n                            <p className=\"question-content\">{question.content}</p>\n                            {/* <a href=\"#!\" class=\"secondary-content\">Follow</a> */}\n                        </div>\n                    </Link>\n                )\n            })\n        }\n    }\n\n    componentDidMount() {\n        const query = this.props.location.search.split('?q=')[1]\n        console.log(query)\n        this.searchResults(query)\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if(this.props.location.search !== nextProps.location.search) {\n            console.log(nextProps.location.search.split('?q=')[1])\n            this.searchResults(nextProps.location.search.split('?q=')[1])\n            return true\n        }\n\n        return false\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Header />\n                <div className=\"my-container\">\n                    <div className=\"row\">\n                        <SideNav />\n                        <div className=\"col s7\">\n                            <div className=\"row\">\n                                <div className=\"row no-margin\">\n                                    <h4 className=\"results-title\">Results for Users:</h4>\n                                </div>\n                \n                                <div className=\"row no-margin\">\n                                    {this.renderUserResults()}\n                                </div>\n                            </div>\n                \n                            <div className=\"row\">\n                                <div className=\"row no-margin\">\n                                    <h4 className=\"results-title\">Results for Questions:</h4>\n                                </div>\n                \n                                <div className=\"row no-margin\">\n                                    {this.renderQuestionsResults()}\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            this.context.user &&\n                            <UsersPanel />\n                        }\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default SearchLayout","import React, {Component, Fragment} from 'react';\nimport Header from '../header/Header';\nimport Services from '../services';\n\nimport './chat-style.css';\nimport io from 'socket.io-client';\n\nclass ChatLayout extends Component {\n    state = {\n        emitter: '',\n        receiver: '',\n        room: '',\n        loading: true\n    }\n    \n    async componentDidMount() {\n        this.services = new Services()\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n        try {\n            const res1 = await this.services.getUserById(this.props.match.params.userEmitter)\n            const res2 = await this.services.getUserById(this.props.match.params.userReceiver)\n\n            const users = {\n                emitter: res1.data.user, \n                receiver: res2.data.user\n            }\n\n            this.socket.emit('chat:online', users, (room) => {\n                console.log(room)\n                this.setState({\n                    emitter: res1.data.user,\n                    receiver: res2.data.user,\n                    room,\n                    loading: false\n                })\n            })\n            \n        } catch(err) {\n            console.log(err)\n        }\n        // this.socket.on('connect', () => {\n        //     console.log('conectado al servidor')\n        // })\n    }\n    // https://sergui-test-chat.herokuapp.com/?nombre=sergui&sala=ironhack&friend=Marcos\n\n    render() {\n        return (\n            <Fragment>\n                <Header />\n                {\n                    this.state.loading ?\n                    <p>Loading ...</p>\n                    :\n                    <iframe className=\"chat-box\" src={`https://sergui-test-chat.herokuapp.com/?nombre=${this.state.emitter.name}&sala=${this.state.room}&friend=${this.state.receiver.name}`} />\n                }\n                {/* <div className=\"chat-section\">\n                    <div className=\"chat-container\">\n                        <div className=\"row chat-row\">\n                            <div className=\"col s3 friends-col\">\n                                <div className=\"row no-margin\">\n                                    <div className=\"col s12 search-friends-container\">\n                                        <input placeholder=\"Search Friends\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col s12\">\n                                        <ul class=\"collection\">\n                                            <li class=\"collection-item collection-title avatar\">\n                                                <span>Your friends</span>\n                                            </li>\n                                            <li class=\"collection-item avatar\">\n                                                <img src=\"images/yuna.jpg\" alt=\"\" class=\"circle\" />\n                                                <span class=\"title\">Sergui Morejon</span>\n                                                <p className=\"online-text\">online</p>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col s9\">\n                                <div className=\"row no-margin chat-title-row\">\n                                    <div className=\"col s12\">\n                                        <h4 className=\"no-margin\">Chat de Sergui con Mario</h4>\n                                    </div>\n                                </div>\n\n                                <div className=\"row chat-msg-row\">\n                                    <div className=\"col s12\">\n                                    <ul class=\"chat-list p-20\" id=\"divChatbox\">\n                                        <li class=\"message-reverse\">\n                                            <div class=\"chat-content\">\n                                                <h5>sergui20</h5>\n                                                <div className=\"message-send\">\n                                                    <span>Que coool</span>\n                                                </div>\n                                            </div>\n                                            <div class=\"chat-img\">\n                                                <img src=\"/assets/user-pic.png\" alt=\"user\" className=\"circle\" width=\"25px\" />\n                                            </div>\n                                            <div class=\"chat-time\">\n                                                17:42\n                                            </div>\n                                        </li>\n\n                                        <li className=\"message\">\n                                            <div className=\"user-receiver\">\n                                                <div className=\"chat-img\">\n                                                    <img src=\"/assets/user-pic.png\" alt=\"user\" className=\"circle\" width=\"25px\" />\n                                                </div>\n                                                <div className=\"chat-content\">\n                                                    <h5>God</h5>\n                                                    <div className=\"message-receive\">\n                                                        <span>Hey</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"chat-time\">\n                                                20:18\n                                            </div>\n                                        </li>\n\n                                    </ul>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col s12\">\n                                        <div className=\"row\">\n                                            <div className=\"col s10\">\n                                                <input placeholder=\"Write your message\"></input>\n                                            </div>\n\n                                            <div className=\"col s2 center-align btn-container\">\n                                                <button className=\"btn send-btn\"><i class=\"material-icons\">send</i></button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                </div> */}\n            </Fragment>\n        )\n    }\n}\n\nexport default ChatLayout;","import React from 'react';\nimport reactDOM from 'react-dom';\n\nimport './footer.css'\n\nconst footer = document.getElementById('footer');\n\nfunction Footer() {\n    return (\n        reactDOM.createPortal(\n            <div className=\"container\">\n                <div className=\"row no-margin footer-row\">\n                    <div className=\"col s4 left-align\">\n                        <img src=\"/assets/whiteLogo.png\" width=\"300px\" />\n                    </div>\n\n                    <div className=\"col s4 center-align\">\n                        <ul className=\"footer-ul\">\n                            <li>About</li>\n                            <li>Questions</li>\n                            <li>Jobs</li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col s4 follow-us-col\">\n                        <div className=\"row no-margin\">\n                            <div className=\"col s12\">\n                                <div className=\"row no-margin\">\n                                    <div className=\"col s12 center-align\">\n                                        <h5 className=\"footer-title\">Follow us</h5>\n                                    </div>\n                                </div>\n\n                                <div className=\"row no-margin\">\n                                    <div className=\"col s12\">\n                                        <img className=\"social-network-footer\" src=\"/assets/social-networks.png\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>,\n            footer\n        )\n    )\n}\n\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Landing from './components/landing/Landing';\nimport Main from './components/homepage/Main';\nimport SearchLayout from './components/homepage/SearchLayout';\nimport ChatLayout from './components/chat/ChatLayout';\nimport Footer from './components/footer/Footer';\nimport {Provider, Context} from './components/provider/index';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst section1 = document.getElementById('section1');\n\nReactDOM.render(\n    <Provider>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route exact path=\"/question/:id\" component={Main}></Route>\n                <Route exact path=\"/search\" component={SearchLayout}></Route>\n                <Context.Consumer>\n                    {(context) => {\n                        if (context.user) {\n                            return (\n                                <Fragment>\n                                    <Route exact path=\"/feed\" component={Main}></Route>\n                                    <Route exact path=\"/public\" component={Main}></Route>\n                                    <Route exact path=\"/profile\" component={Main}></Route>\n                                    <Route exact path=\"/chat/:userEmitter/:userReceiver\" component={ChatLayout}></Route>\n                                </Fragment>\n                            )\n                        } else {\n                            return (\n                                <Redirect to=\"/\"></Redirect>\n                            )\n                        } \n                    }}\n                </Context.Consumer>\n            </Switch>\n            <Footer />\n        </BrowserRouter>\n    </Provider>,\n    section1\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}