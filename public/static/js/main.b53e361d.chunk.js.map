{"version":3,"sources":["components/services.js","components/widgets/Loader.js","components/provider/index.js","components/widgets/Dropdown.js","components/widgets/Modal.js","components/header/Header.js","components/landing/TitleSection.js","components/landing/Landing.js","components/homepage/SideNav.js","components/homepage/Answers.js","components/homepage/Post.js","components/homepage/PostLayout.js","components/profile/Question.js","components/profile/Answer.js","components/profile/Profile.js","components/homepage/QuestionLayout.js","components/homepage/UsersPanel.js","components/homepage/Main.js","components/homepage/UserResults.js","components/homepage/SearchLayout.js","components/chat/ChatLayout.js","components/footer/Footer.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","name","username","email","password","body","service","post","login","getCurrentUser","get","updateCurrentUser","put","getUserLocation","position","concat","coords","latitude","longitude","getUserById","id","getUserActivity","getPublicPosts","getFeedPosts","createPost","title","content","deletePost","delete","updatePost","postInfo","objectSpread","logoutUser","createAnswer","postID","deleteAnswer","getAnswers","searchResults","data","getQuestion","addFriend","removeFriend","console","log","acceptRequest","friendID","deniedRequest","axios","create","baseURL","process","withCredentials","Loader","react_default","a","createElement","className","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","user","friendsIDs","activity","searchData","loader","Services","then","res","setState","catch","err","handleSearchData","authenticateUser","userInfo","inherits","createClass","key","value","react","widgets_Loader","props","children","Component","Dropdown","type","class","userIcon","react_router_dom","to","onClick","userLogout","notificationIcon","notifications","map","notification","_id","messageIcon","href","Modal","ref","setForm","onSubmit","handleSubmit","htmlFor","toggleModal","Header","userDropdown","notificationDropdown","messageDropdown","loginModal","signupModal","ev","preventDefault","Service","form","FormData","target","form1","reset","context","history","push","form2","setForm1","el","setForm2","socket","io","emit","handleSearchForm","toggleDropdown","dropdown","defineProperty","modal","services","friend","_this2","on","_this3","ReactDOM","createPortal","src","width","placeholder","widgets_Dropdown","friends","incomingRequests","widgets_Modal","document","getElementById","contextType","withRouter","TitleSection","Homepage","header_Header","landing_TitleSection","SideNav","useContext","activeClassName","isActive","isActiveNav","Answers","owner","moment","createdAt","fromNow","Post","answers","newTitle","newContent","edit","viewAnswers","togglePostInfo","sendPostInfo","newInfo","handleEditChange","sendPostID","toggleAnswers","handleAnswerForm","getPostAnswers","setAnswerForm","sertvice","onChange","answer","homepage_Answers","assign","PostLayout","M","init","querySelectorAll","setPostForm","handlePostSubmit","posts","homepage_Post","Question","question","Answer","ProfileLayout","handleInputChange","resetForm","handleSubmitForm","Tabs","img","profile_Question","profile_Answer","friendsList","alt","for","QuestionLayout","date","handleSubmitAnswer","match","params","UsersPanel","onlineUsers","includes","Main","feed","public","postForm","navigator","geolocation","getCurrentPosition","components","results","county","state_code","error","code","PERMISSION_DENIED","getInfo","_callee","res1","res2","res3","regenerator_default","wrap","_context","prev","next","sent","filter","stop","_callee2","_context2","_callee3","_context3","renderHomepage","path","homepage_PostLayout","togglePostForm","Profile","homepage_QuestionLayout","description","cb","location","pathname","passSearchData","homepage_SideNav","homepage_UsersPanel","UserResults","removeButton","outcomingRequests","SearchLayout","users","questions","renderUserResults","homepage_UserResults","renderQuestionsResults","query","search","split","nextProps","ChatLayout","emitter","receiver","room","loading","userEmitter","userReceiver","t0","footer","Footer","reactDOM","Boolean","window","hostname","section1","render","provider_Provider","react_router","exact","component","Landing","Consumer","footer_Footer","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b53e361d.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_BASEURL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (name, username, email, password) => {\n    const body = { name, username, email, password }\n    return this.service.post('/authenticate/signup', body)\n  }\n\n  login = (username, password) => {\n    const body = {username, password}\n    return this.service.post('/authenticate/login', body)\n  }\n\n  getCurrentUser = () => {\n    return this.service.get('/authenticate/getcurrentuser')\n  }\n\n  updateCurrentUser = (name, username, email) => {\n    const body = {name, username, email}\n    return this.service.put('/authenticate/updateuser/', body)\n  }\n\n  getUserLocation = (position) => {\n    return this.service.get(`https://api.opencagedata.com/geocode/v1/json?q=${position.coords.latitude}+${position.coords.longitude}&key=614cbe4035a04205bc7d3451acfe5004`)\n  }\n\n  getUserById = (id) => {\n    return this.service.get(`/authenticate/getuser/${id}`)\n  }\n  \n  getUserActivity = (id) => {\n    return this.service.get(`/api/authenticate/getuseractivity/${id}`)\n  }\n\n  getPublicPosts = () => {\n    return this.service.get('/api/posts/public')\n  }\n\n  getFeedPosts = () => {\n    return this.service.get('/api/posts/feed')\n  }\n\n  createPost = (title, content) => {\n    const body = {title, content}\n    return this.service.post('/api/post/create', body)\n  }\n\n  deletePost = (id) => {\n    return this.service.delete(`/api/post/delete/${id}`)\n  }\n\n  updatePost = (postInfo) => {\n    const body = {...postInfo}\n    return this.service.put('/api/post/update', body)\n  }\n\n  logoutUser = () => {\n    return this.service.post('/authenticate/logout')\n  }\n\n  createAnswer = (postID, content) => {\n    const body = {post: postID, content}\n    return this.service.post('/api/answer/create', body)\n  }\n\n  deleteAnswer = (id) => {\n    return this.service.delete(`/api/answer/delete/${id}`)\n  }\n\n  getAnswers = (postID) => {\n    return this.service.get(`/api/answers/${postID}`)\n  }\n\n  searchResults = (data) => {\n    return this.service.get(`/api/serch/results/${data}`)\n  }\n\n  getQuestion = (id) => {\n    return this.service.get(`/api/post/${id}`)\n  }\n\n  addFriend = (id) => {\n    return this.service.post(`/api/friend/add/${id}`)\n  }\n\n  removeFriend = (id) => {\n    console.log('service', id)\n    return this.service.post(`/api/friend/remove/${id}`)\n  }\n\n  acceptRequest = (friendID) => {\n    return this.service.post(`/api/friend/accept/${friendID}`)\n  }\n\n  deniedRequest = (friendID) => {\n    return this.service.post(`/api/friend/denied/${friendID}`)\n  }\n}\n\nexport default AuthService;","import React from 'react';\nimport './loader.css';\n\nfunction Loader() {\n    return (\n        <div className=\"loader\"></div>\n    )\n}\n\nexport default Loader;","import React, { Component, Fragment } from 'react';\nimport Services from '../services';\n\nimport Loader from '../widgets/Loader';\n\nexport const Context = React.createContext();\n\nexport class Provider extends Component {\n    state = {\n        user: '',\n        friendsIDs: [],\n        activity: null,\n        searchData: null,\n        loader: true\n    }\n\n    componentDidMount() {\n        this.getCurrentUser()\n    }\n\n    getCurrentUser = () => {\n        this.service = new Services();\n        this.service.getCurrentUser()\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    user: res.data.user,\n                    friendsIDs: res.data.friendsIDs,\n                    loader: false\n                })\n                // () => window.dropdownTrigger()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleSearchData = (data) => {\n        this.setState({\n            searchData: data\n        })\n    }\n\n    authenticateUser = (userInfo) => {\n        this.setState({\n            user: userInfo\n        })\n    }\n\n    render() {\n        return(\n            <Fragment>\n                {\n                    this.state.loader ?\n                    <Loader />\n                    :\n                    <Context.Provider value={{\n                        user: this.state.user,\n                        friendsIDs: this.state.friendsIDs,\n                        authenticateUser: this.authenticateUser,\n                        handleSearchData: this.handleSearchData,\n                        searchData: this.state.searchData,\n                        getCurrentUser: this.getCurrentUser\n                    }}>\n                        {this.props.children}\n                    </Context.Provider>\n                }\n            </Fragment>\n        )\n    }\n}\n","import React, {Fragment} from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Dropdown(props) {\n    return(\n        <ul id={props.type} class='dropdown-content'>\n            {\n                props.userIcon &&\n                <Fragment>\n                    <li><Link to=\"/profile\">Profile</Link></li>\n                    <li><a onClick={props.userLogout}>Logout</a></li>\n                </Fragment>\n            }\n            {\n                props.notificationIcon &&\n                <Fragment>\n                    {\n                        props.notifications.map(notification => {\n                            return (\n                                <li className=\"row no-margin\">\n                                    <div className=\"row no-margin\">\n                                        <span>{notification.name} wants to be your friend</span>\n                                    </div>\n                                    <div className=\"row no-margin\">\n                                        <div className=\"col s5\">\n                                            <button onClick={() => props.acceptRequest(notification._id)} className=\"btn-flat btn-small notif-accept-btn\"><i className=\"notif-icon material-icons\">check</i></button>\n                                        </div>\n                                        <div className=\"col s5 push-s2\">\n                                            <button onClick={() => props.deniedRequest(notification._id)} className=\"btn-flat btn-small notif-denied-btn\"><i className=\"notif-icon material-icons\">close</i></button>\n                                        </div>\n                                    </div>\n                                </li>\n                            )\n                        })                        \n                    }\n                </Fragment>\n            }\n            {\n                props.messageIcon &&\n                <Fragment>\n                    <li><a href=\"#!\">Message 1</a></li>\n                    <li><a href=\"#!\">Message 2</a></li>\n                    <li><a href=\"#!\">Message 3</a></li>\n                </Fragment>\n            }\n        </ul>\n    )\n}\n\nexport default Dropdown;\n","import React, {Fragment} from 'react';\n\nfunction Modal(props) {\n    return(\n        <div id={props.type} className=\"modal\">\n            <div className=\"modal-content\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h4 className=\"modal-title\">{props.title}</h4> \n                    </div>\n                </div>\n\n                <div className=\"container\">\n                    <div class=\"row\">\n                        <form ref={props.setForm} id={props.type} class=\"col s12\" onSubmit={props.handleSubmit}>\n                            {\n                                props.signup ?\n                                <Fragment>\n                                    <div class=\"row auth-form-row\">\n                                        <div class=\"input-field col s12\">\n                                            <i class=\"material-icons prefix auth-form-icon\">account_circle</i>\n                                            <input id=\"name\" type=\"text\" name=\"name\" class=\"validate\" />\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                    </div>\n                                    <div class=\"row auth-form-row\">\n                                        <div class=\"input-field col s12\">\n                                            <i class=\"material-icons prefix auth-form-icon\">account_circle</i>\n                                            <input id=\"username\" type=\"text\" name=\"username\" class=\"validate\" />\n                                            <label htmlFor=\"username\">Username</label>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"row auth-form-row\">\n                                        <div class=\"input-field col s12\">\n                                            <i class=\"material-icons prefix auth-form-icon\">account_circle</i>\n                                            <input id=\"email\" type=\"email\" name=\"email\" class=\"validate\" />\n                                            <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                    </div>\n                                </Fragment>\n                                :\n                                <div class=\"row auth-form-row\">\n                                    <div class=\"input-field col s12\">\n                                        <i class=\"material-icons prefix auth-form-icon\">account_circle</i>\n                                        <input id=\"ename\" type=\"text\" name=\"username\" class=\"validate\" />\n                                        <label htmlFor=\"ename\">Email or username</label>\n                                    </div>\n                                </div>\n                            }\n\n                            <div class=\"row auth-form-row\">\n                                <div class=\"input-field col s12\">\n                                    <i class=\"material-icons prefix auth-form-icon\">lock</i>\n                                    <input id=\"password\" type=\"password\" name=\"password\" class=\"validate\" />\n                                    <label htmlFor=\"password\">Password</label>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col s12 center-align\">\n                                    <div className=\"row\">\n                                        <div className=\"col s12 submit-btn-container\">\n                                            <button className=\"btn modal-close\">Submit</button>\n                                            {\n                                                props.signup ?\n                                                <Fragment>\n                                                    <a href=\"/auth/github\" className=\"btn btn-github\">Signup with Github</a>\n                                                </Fragment>\n                                                :\n                                                <Fragment>\n                                                    <a href=\"/auth/github\" className=\"btn btn-github\">Login with Github</a>\n                                                </Fragment>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a onClick={props.toggleModal} className=\"btn\">Close</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {withRouter, Link} from 'react-router-dom';\nimport {Context} from '../provider/index';\nimport Service from '../services';\n\nimport Dropdown from '../widgets/Dropdown';\nimport Modal from '../widgets/Modal';\n\nimport io from 'socket.io-client';\n\nimport './header.css';\n\nclass Header extends Component {\n    state = {\n        userDropdown: false,\n        notificationDropdown: false,\n        messageDropdown: false,\n        loginModal: false,\n        signupModal: false,\n        // notifications: []\n    }\n\n    componentDidMount() {\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n        this.socket.on('friendNotification', (notifications) => {\n            // const myNotifications = notifications.filter( notification => {\n            //     return notification.userReceiver === this.context.user._id\n            // })\n\n            this.context.getCurrentUser()\n        })\n    }\n\n    static contextType = Context\n\n\n    handleSubmit = (ev) => {\n        ev.preventDefault();\n        this.service = new Service();\n        const form  = new FormData(ev.target);\n        const name = form.get('name');\n        const username = form.get('username');\n        const email = form.get('email')\n        const password = form.get('password');\n        const ename = form.get('ename');\n\n        if(ev.target.id === \"modal1\") {\n            this.service.login(username, password)\n                .then(res => {\n                    this.form1.reset();\n                    this.context.authenticateUser(res.data.user)\n                    this.props.history.push('/feed')\n                    // window.dropdownTrigger()\n                })\n                .catch( err => {\n                    console.log(err)\n                })\n        } else {\n            this.service.signup(name, username, email, password)\n                .then( res => {\n                    this.form2.reset();\n                    this.context.authenticateUser(res.data.user)\n                    this.props.history.push('/feed')\n                    // window.dropdownTrigger()\n                    // window.tabs()\n                })\n                .catch( err => {\n                    console.log(err)\n                })\n        }\n    }\n\n    setForm1 = (el) => {\n        this.form1 = el\n    }\n\n    setForm2 = (el) => {\n        this.form2 = el\n    }\n\n    userLogout = () => {\n        this.service = new Service();\n        this.service.logoutUser()\n            .then( (res) => {\n                this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n                // this.socket.on('connect', () => {\n                //     this.socket.emit('web:online', this.context.user)\n                // })\n                this.socket.emit('logoutEvent', this.context.user)\n                this.context.authenticateUser('');\n                // window.modalTrigger()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleSearchForm = (ev) => {\n        ev.preventDefault();\n        const form = new FormData(ev.target);\n        const data = form.get('search');\n        // this.context.handleSearchData(data)\n        this.props.history.push(`/search?q=${data}`)\n        this.context.getCurrentUser()\n    }\n\n    toggleDropdown = (dropdown) => {\n        this.setState({\n            [dropdown]: !(this.state[dropdown])\n        })\n    }\n\n    toggleModal = (modal) => {\n        this.setState({\n            [modal]: !(this.state[modal])\n        })\n    }\n\n    acceptRequest = (friendID) => {\n        this.services = new Service();\n        this.services.acceptRequest(friendID)\n            .then(res => {\n                this.socket.emit('acceptFriendRequest', {user: this.context.user, friend: friendID})\n                // this.context.getCurrentUser()\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    deniedRequest = (friendID) => {\n        this.services = new Service();\n        this.services.deniedRequest(friendID)\n            .then(res => {\n                this.context.getCurrentUser()\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return  ReactDOM.createPortal(\n            <nav>\n                <div className=\"my-container full-height\">\n                    <div className=\"row no-margin full-height\">\n                        <div className=\"col s2 full-height logo-container\">\n                            <Link to=\"/\" className=\"title-link\">\n                                <img src=\"/assets/logo2.png\" width=\"100px\" />\n                            </Link>\n                        </div>\n                        <form className=\"col s7 no-margin full-height vertical-align\" onSubmit={this.handleSearchForm}>\n                            <input placeholder=\"Search\" className=\"search-input\" type=\"text\" name=\"search\" />\n                        </form>\n                        <div className=\"col s3\">\n                            {\n                                this.context.user ?\n                                <ul className=\"nav-ul\">\n                                    <li><a onClick={() => this.toggleDropdown('userDropdown')} className='btn my-btn'><i className=\"material-icons\">person</i></a></li>\n                                    <li><a onClick={() => this.toggleDropdown('notificationDropdown')} className='btn my-btn'><i className=\"material-icons\">notifications</i></a></li>\n                                    <li><a onClick={() => this.toggleDropdown('messageDropdown')} className='btn my-btn'><i className=\"material-icons\">mail</i></a></li>\n                                    {\n                                        this.state.userDropdown &&\n                                        <Dropdown type=\"userDropdown\" userIcon userLogout={this.userLogout}  />\n                                    }\n                                    {\n                                        this.state.notificationDropdown &&\n                                        <Dropdown type=\"notificationDropdown\" notificationIcon notifications={this.context.user.friends.incomingRequests} acceptRequest={this.acceptRequest} deniedRequest={this.deniedRequest} />\n                                    }\n                                    {\n                                        this.state.messageDropdown &&\n                                        <Dropdown type=\"messageDropdown\" messageIcon />\n                                    }\n                                </ul>\n                                :\n                                <ul className=\"nav-ul\">\n                                    <li><a onClick={() => this.toggleModal('loginModal')} className=\"btn modal-trigger\">Login</a></li>\n                                    <li><a onClick={() => this.toggleModal('signupModal')} className=\"btn modal-trigger\">Signup</a></li>\n                                    {\n                                        this.state.loginModal &&\n                                        <Modal type=\"modal1\" title=\"Login\" login handleSubmit={this.handleSubmit} setForm={this.setForm1} toggleModal={() => this.toggleModal('loginModal')} />\n                                    }\n                                    {\n                                        this.state.signupModal &&\n                                        <Modal type=\"modal2\" title=\"Signup\" signup handleSubmit={this.handleSubmit} setForm={this.setForm2} toggleModal={() => this.toggleModal('signupModal')} />\n                                    }\n                                </ul>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </nav>,\n            document.getElementById('header')\n        )\n    }\n}\n\nexport default withRouter(Header);\n","import React from 'react';\n\nfunction TitleSection() {\n    return (\n        <div className=\"row titles-row no-margin\">\n            <div className=\"col s12 titles-container\">\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <h1 className=\"main-title\">DevSol</h1>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <h3 className=\"main-subtitle\">Connect, Share, and Grow</h3>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col s5\">\n                        <p className=\"main-p\">DevSol is an open community for developers around the world. We help you to have INSTANT solutions to any of your coding questions, connect with developers, and grow together</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TitleSection;","import React, { Component, Fragment } from 'react';\nimport Header from '../header/Header';\nimport TitleSection from './TitleSection';\n\nclass Homepage extends Component {\n    render() {\n        return(\n            <Fragment>\n                <Header />\n\n                <TitleSection />\n                {/* <Modal type=\"modal1\" title=\"Login\" login handleSubmit={this.handleSubmit} setForm={this.setForm1} />\n                <Modal type=\"modal2\" title=\"Signup\" signup handleSubmit={this.handleSubmit} setForm={this.setForm2} /> */}\n\n                {/* <Dropdown type=\"userDropdown\" userIcon />\n                <Dropdown type=\"notificationDropdown\" notificationIcon />\n                <Dropdown type=\"messageDropdown\" messageIcon /> */}\n            </Fragment>\n        )\n    }\n}\n\nexport default Homepage;","import React, { useContext } from 'react';\nimport { Context } from '../provider/index';\nimport { NavLink } from 'react-router-dom';\n\nfunction SideNav(props) {\n    const context = useContext(Context)\n    return (\n        <div className=\"col s2 my-sidenav top-space\">\n            {\n                context.user &&\n                <div className=\"row sidenav-row\">\n                    <i class=\"material-icons col s2\">forum</i>\n                    <NavLink to=\"/feed\" activeClassName=\"is-active\" isActive={props.isActiveNav} className=\"col s10 btn-flat sidenav-link\">Feed</NavLink>\n                </div>\n            }\n            <div className=\"row sidenav-row\">\n                <i class=\"material-icons col s2\">public</i>\n                <NavLink to=\"/public\" activeClassName=\"is-active\" className=\"col s10 btn-flat sidenav-link\">Public</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default SideNav;","import React from 'react';\nimport moment from 'moment';\n\nfunction Answers(props) {\n    return (\n        <div className=\"row answer-row\">\n            <div className=\"row no-margin vertical-align\">\n                <div className=\"col s11\">\n                    <p>{props.content}</p>\n                </div>\n                <div className=\"col s1\"><button className=\"btn-flat\" onClick={() => props.deleteAnswer(props._id)}><i class=\"material-icons\">delete</i></button></div>\n            </div>\n\n            <div className=\"row no-margin\">\n                <div className=\"col s4 push-s8 right-align\">\n                    <p className=\"post-info\">Answered by: {props.owner.name}</p>\n                    <p className=\"post-info post-info-date\">{moment(props.createdAt).fromNow()}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Answers;","import React, { Component, Fragment } from 'react';\nimport {Link} from 'react-router-dom';\nimport { Context } from '../provider/index';\nimport moment from 'moment';\n\nimport Answers from './Answers';\n\nimport Services from '../services';\n\nclass Post extends Component {\n    static contextType = Context\n\n    state = {\n        post: this.props.post,\n        answers: this.props.post.answers,\n        newTitle: this.props.post.title,\n        newContent: this.props.post.content,\n        edit: false,\n        viewAnswers: false\n    }\n\n    togglePostInfo = () => {\n        this.setState({\n            edit: !this.state.edit\n        })\n    }\n\n    sendPostInfo = () => {\n        const newInfo = {\n            id: this.state.post._id,\n            title: this.state.newTitle,\n            content: this.state.newContent\n        }\n        this.props.updatePost(newInfo, () => {\n            this.setState({\n                edit: false,\n                post: {...this.state.post, title: this.state.newTitle, content: this.state.newContent}\n            })\n        })\n    }\n    \n    handleEditChange = (ev) => {\n        this.setState({\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    sendPostID = () => {\n        this.props.deletePost(this.state.post._id)\n    }\n\n    toggleAnswers = () => {\n        this.setState({\n            viewAnswers: !this.state.viewAnswers\n        })\n    }\n\n    handleAnswerForm = (ev) => {\n        ev.preventDefault();\n        this.service = new Services();\n        const form = new FormData(ev.target);\n        const content = form.get('answer')\n\n        this.service.createAnswer(this.state.post._id, content)\n            .then( res => {\n                this.form.reset();\n                this.getPostAnswers()\n            })\n            .catch( err => {\n                console.log(err)\n            })\n    }\n\n    setAnswerForm = (el) => {\n        this.form = el\n    }\n\n    getPostAnswers = () => {\n        this.service = new Services();\n        this.service.getAnswers(this.state.post._id)\n            .then( res => {\n                console.log(res)\n                this.setState({\n                    answers: res.data.answers\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    deleteAnswer = (id) => {\n        this.sertvice = new Services();\n        this.sertvice.deleteAnswer(id)\n            .then(res => {\n                this.getPostAnswers()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return(\n            <div className=\"row post-card\">\n                <div className=\"col s12\">\n                    <div className={`row ${this.state.edit ? '' : 'no-margin'}`}>\n                        <div className=\"col s10\">\n                            {\n                                this.state.edit ?\n                                <input name=\"newTitle\" value={this.state.newTitle} onChange={this.handleEditChange} className=\"edit-question-row\"></input>\n                                :\n                                <Link to={`/question/${this.state.post._id}`}>\n                                    <p className=\"post-title\">{this.state.post.title}</p>\n                                </Link>\n                            }\n                        </div>\n                        {\n                            this.context.user && (\n                                this.context.user._id === this.props.post.owner._id && (\n                                    <Fragment>\n                                        <div className=\"col s1\">\n                                            <button className=\"btn-flat\" onClick={this.togglePostInfo}><i class=\"material-icons\">edit</i></button>\n                                        </div>\n\n                                        <div className=\"col s1\">\n                                            <button className=\"btn-flat\" onClick={this.sendPostID}><i class=\"material-icons\">delete</i></button>\n                                        </div>\n                                    </Fragment>\n                                )\n                            )\n                        }\n                    </div>\n\n                    <div className={`row ${this.state.edit ? '' : 'no-margin'}`}>\n                        <div className=\"col s10 edit-info-container\">\n                            {\n                                this.state.edit ?\n                                <textarea className=\"edit-info-row\" name=\"newContent\" value={this.state.newContent} onChange={this.handleEditChange}></textarea>\n                                :\n                                <p>{this.state.post.content}</p>\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"vertical-align\">\n                            <div className=\"col s4 no-margin\">\n                                <button onClick={this.toggleAnswers} className=\"btn-flat vertical-align\"> <i class=\"material-icons\">keyboard_arrow_down</i>{this.state.viewAnswers ? 'Hide Answers' : 'Answers'}</button>\n                            </div>\n                            <div className=\"col s5 push-s3 center-align no-margin\">\n                                <p className=\"post-info\"><b>Asked by: </b>{this.props.post.owner.name}</p>\n                                <p className=\"post-info post-info-date\">{moment(this.props.post.createdAt).fromNow()}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    {\n                        this.state.edit &&\n                        <div className=\"row\">\n                            <div className=\"col s2 push-s8\">\n                                <button className=\"btn-flat\" onClick={this.togglePostInfo}>Cancel</button>\n                            </div>\n\n                            <div className=\"col s2 push-s8\">\n                                <button className=\"btn\" onClick={this.sendPostInfo}>Update</button>\n                            </div>\n                        </div>\n                    }\n\n                    {\n                        this.state.viewAnswers &&\n                        <Fragment>\n                            <div className=\"container answers-container\"> \n                                {\n                                    this.state.answers.map( answer => <Answers {...answer} deleteAnswer={this.deleteAnswer} />)\n                                }\n                            </div>\n\n                            <div className=\"row no-margin form-answer-container\">\n                                <form ref={this.setAnswerForm} className=\"col s12\" onSubmit={this.handleAnswerForm}>\n                                    <div className=\"row\">\n                                        <div className=\"col s10\">\n                                            <input className=\"answer-input\" name=\"answer\"></input>\n                                        </div>\n\n                                        <div className=\"col s2\">\n                                            <button className=\"btn answer-button\">Answer</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </Fragment>\n                    }\n                </div>\n            </div>\n        )   \n    }\n}\n\nexport default Post;","import React, { useContext } from 'react';\nimport M from 'materialize-css';\n\nimport Post from './Post';\nimport { Context } from '../provider';\n\nfunction PostLayout(props) {\n    const context = useContext(Context)\n    M.Modal.init(document.querySelectorAll('.modal'));    \n    return(\n        <div className=\"col s7 top-space\">\n            <div className=\"row\">\n                <div className=\"col s9\">\n                    <h2 className=\"public-questions-title\">Top Questions</h2>\n                </div>\n                {\n                    context.user &&\n                    <div className=\"col s3\">\n                        <a className=\"btn modal-trigger\" href=\"#ask-modal\" /*onClick={props.togglePostForm}*/>\n                            {/* {props.postForm ? 'Hide Form' : 'Ask Question'} */}\n                            Ask question\n                        </a>\n                    </div>\n                }\n            </div>\n            {/* {\n                props.postForm &&\n                <div class=\"row\">\n                    <form ref={props.setPostForm} class=\"col s12\" onSubmit={props.handlePostSubmit}>\n                        <div class=\"row no-margin\">\n                            <div class=\"input-field col s12\">\n                                <input id=\"title\" type=\"text\" name=\"title\" />\n                                <label htmlFor=\"title\">Title</label>\n                            </div>\n                        </div>\n\n                        <div class=\"row no-margin\">\n                            <div class=\"input-field col s12\">\n                                <input id=\"description\" type=\"text\" name=\"description\" />\n                                <label htmlFor=\"description\">Description</label>\n                            </div>\n                        </div>\n\n                        <div className=\"row no-margin\">\n                             <div className=\"col s12 right-align\">\n                                <button className=\"btn\">Post</button>\n                             </div>\n                        </div>\n                    </form>\n                </div>\n            } */}\n            <div id=\"ask-modal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <p className=\"modal-ask-title\">We’ll help you find the best way to get your answer.</p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <form id=\"ask-form\" ref={props.setPostForm} className=\"col s12\" onSubmit={props.handlePostSubmit}>\n                            <div className=\"container\">\n                                <div className=\"row auth-form-row\">\n                                    <div className=\"input-field col s12\">\n                                        <input id=\"title\" type=\"text\" name=\"title\" />\n                                        <label htmlFor=\"title\">Title</label>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"input-field col s12 no-padding\">\n                                        <textarea placeholder=\"Describe your question...\" className=\"ask-textarea\" id=\"description\" type=\"text\" name=\"description\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button className=\"modal-close btn-flat\">Cancel</button>\n                    <button form=\"ask-form\" className=\"modal-close btn\">Post</button>\n                </div>\n            </div>\n            {\n                props.posts.map( (el) => <Post key={el._id}  post={el} updatePost={props.updatePost} deletePost={props.deletePost} />)\n            }\n        </div>\n    )\n}\n\nexport default PostLayout;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Question extends Component {\n    state = {\n        question: this.props.question\n    }\n\n    render() {\n        return (\n            <div className=\"row no-margin activity-results-div\">\n                <div className=\"col s12\">\n                    <Link to={`/question/${this.props.question._id}`}>{this.props.question.title}</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Question","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Answer extends Component {\n    state = {\n        answer: this.props.answer\n    }\n\n    render() {\n        return (\n            <div className=\"row no-margin activity-results-div\">\n                <div className=\"col s12\">\n                    <Link to={`/question/${this.props.answer.post}`}>{this.props.answer.content}</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Answer","import React, {Component} from 'react';\nimport { Context } from '../provider/index';\nimport Question from './Question';\nimport Answer from './Answer';\nimport M from 'materialize-css';\nimport Services from '../services';\n\nclass ProfileLayout extends Component {\n    static contextType = Context;\n\n    state = {\n        name: this.context.user.name,\n        username: this.context.user.username,\n        email: this.context.user.email\n    }\n\n    componentDidMount() {\n        M.Tabs.init(document.querySelectorAll('.tabs'));\n        M.Modal.init(document.querySelectorAll('.modal'));\n    }\n\n    handleInputChange = (ev) => {\n        this.setState({\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    resetForm = () => {\n        this.setState({\n            name: this.context.user.name,\n            username: this.context.user.username,\n            email: this.context.user.email\n        })\n    }\n\n    handleSubmitForm = (ev) => {\n        ev.preventDefault()\n        this.services = new Services();\n        this.services.updateCurrentUser(this.state.name, this.state.username, this.state.email)\n            .then( res => {\n                this.context.getCurrentUser()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return(\n            <div className=\"col s7 top-space\">\n                <div className=\"row\">\n                    <div className=\"col s4 center-align\">\n                        <img src={this.context.user.img} width=\"120px\" />\n                    </div>\n\n                    <div className=\"col s6\">\n                        <h3 className=\"no-margin\">{this.context.user.name}</h3>\n                        <p><b>Username: </b>{this.context.user.username}</p>\n                        <p><i class=\"material-icons\">location_on</i>Miami</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s9\">\n                        <ul className=\"tabs\">\n                            <li className=\"tab col s4\"><a className=\"active no-padding\" href=\"#questions\">Questions</a></li>\n                            <li className=\"tab col s4\"><a className=\"no-padding\" href=\"#answers\">Answers</a></li>\n                            <li className=\"tab col s4\"><a className=\"no-padding\" href=\"#friends\">Friends</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col s3 right-align\">\n                        <a className=\"btn modal-trigger\" href=\"#edit-modal\">Edit Profile</a>\n                    </div>\n                    <div id=\"questions\" className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"col s6\">\n                                <h4>Your Questions</h4>\n                                {\n                                    this.props.activity && this.props.activity.posts.map( post => <Question question={post} />)\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"answers\" className=\"col s12\">\n                        <h4>Your Answers</h4>\n                        {\n                            this.props.activity && this.props.activity.answers.map( answer => <Answer answer={answer} />)\n                        }\n                    </div>           \n                    <div id=\"friends\" className=\"col s12\">\n                        <ul class=\"row collection users-collection friends-ul\">\n                            {\n                                this.context.user.friends.friendsList.length > 0 ? (\n                                this.context.user.friends.friendsList.map(friend => {\n                                    return (\n                                        <li className=\"col s5 collection-item avatar friends-card\">\n                                            <img src={friend.img} alt=\"\" className=\"circle friends-img\" />\n                                            <span className=\"title\">{friend.username}</span>\n                                        </li>\n                                    )\n                                }))\n                                :\n                                <span>No Friends</span>\n                            }\n                        </ul> \n                    </div>                \n                </div>\n                <div id=\"edit-modal\" className=\"modal\">\n                    <div className=\"modal-content\">\n                        <div className=\"row\">\n                            <div className=\"col s12\">\n                                <h5>Edit your profile</h5>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <form id=\"edit-form\" className=\"col s12\" onSubmit={this.handleSubmitForm}>\n                                <div className=\"row no-margin\">\n                                    <div className=\"input-field col s12\">\n                                        <input id=\"name\" type=\"text\" name=\"name\" className=\"validate\" value={this.state.name} onChange={this.handleInputChange} />\n                                        <label id=\"name-label\" for=\"name\" className=\"active\">Name</label>\n                                    </div>\n                                </div>\n\n                                <div className=\"row no-margin\">\n                                    <div className=\"input-field col s12\">\n                                        <input id=\"username\" type=\"text\" name=\"username\" className=\"validate\" value={this.state.username} onChange={this.handleInputChange} />\n                                        <label id=\"username-label\" for=\"username\" className=\"active\">Username</label>\n                                    </div>\n                                </div>\n\n                                <div className=\"row no-margin\">\n                                    <div className=\"input-field col s12\">\n                                        <input id=\"email\" type=\"email\" name=\"email\" className=\"validate\" value={this.state.email} onChange={this.handleInputChange} />\n                                        <label id=\"email-label\" for=\"email\" className=\"active\">Email</label>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button className=\"modal-close btn-flat\" onClick={this.resetForm}>Cancel</button>\n                        <button form=\"edit-form\" className=\"modal-close btn\">Submit</button>\n                    </div>\n                </div>\n            </div> \n        )\n    }\n}\n\nexport default ProfileLayout;\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { Context } from '../provider/index';\nimport Services from '../services';\nimport moment from 'moment';\n\nclass QuestionLayout extends Component {\n    state = {\n        _id: '',\n        title: '',\n        content: '',\n        owner: '',\n        date: '',\n        createdAt: '',\n        answers: []\n    }\n\n    static contextType = Context;\n\n    componentDidMount() {\n        this.service = new Services();\n        this.service.getQuestion(this.props.match.params.id)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    _id: res.data.post._id,\n                    title: res.data.post.title,\n                    content: res.data.post.content,\n                    owner: res.data.post.owner.name,\n                    createdAt: res.data.post.createdAt,\n                    answers: res.data.post.answers\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    getPostAnswers = () => {\n        this.service = new Services();\n        this.service.getAnswers(this.state._id)\n            .then( res => {\n                this.setState({\n                    answers: res.data.answers\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    \n    handleSubmitAnswer = (ev) => {\n        ev.preventDefault();\n        this.services = new Services();\n        const form = new FormData(ev.target);\n        const content = form.get('answer')\n\n        this.service.createAnswer(this.state._id, content)\n        .then( res => {\n            this.form.reset();\n            this.getPostAnswers()\n        })\n        .catch( err => {\n            console.log(err)\n        })\n    }\n\n    setForm = (el) => {\n        this.form = el;\n    }\n\n    render() {\n        console.log(this.state.createdAt)\n        return (\n            <div className=\"col s7 top-space\">\n                <div className=\"row\">\n                    <div className=\"row no-margin\">\n                        <div className=\"col s12\">\n                            <h3>{this.state.title}</h3>\n                        </div>\n                    </div>\n                    <div className=\"row no-margin\">\n                        <div className=\"col s12 right-align\">\n                            <span>{moment(this.state.createdAt).fromNow()}</span>\n                        </div>\n                    </div>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <p>{this.state.content}</p>\n                        </div>\n                    </div>\n    \n                    <div className=\"row\">\n                        <div className=\"row\">\n                            <div className=\"col s12 right-align\">\n                                <span><b>Asked by: </b>{this.state.owner}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"row no-margin answers-title-row\">\n                        <div className=\"col s12\">\n                            <p>{this.state.answers.length} Answers</p>\n                        </div>\n                    </div>\n    \n                    <div className=\"row full-width\">\n                        {\n                            this.state.answers.map( answer => {\n                                return (\n                                    <div className=\"col s12 answers-row\">\n                                        <div className=\"row no-margin\">\n                                            <div className=\"col s12\">\n                                                <p>{answer.content}</p>\n                                            </div>\n                                        </div>\n    \n                                        <div className=\"row no-margin\">\n                                            <div className=\"col s12 right-align\">\n                                                <span><b>Answered by: </b>{answer.owner.name}</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                {\n                    this.context.user &&\n                    <div className=\"row\">\n                        <div className=\"row\">\n                            <div className=\"col s12\">\n                                <h4>Your Answer</h4>\n                            </div>\n                        </div>\n        \n                        <div className=\"row\">\n                            <form ref={this.setForm} className=\"col s12\" onSubmit={this.handleSubmitAnswer}>\n                                <div className=\"row\">\n                                    <div className=\"col s12\">\n                                        <textarea name=\"answer\" className=\"answer-textarea\"></textarea>\n                                    </div>\n                                </div>\n        \n                                <div className=\"row\">\n                                    <div className=\"col s12\">\n                                        <button className=\"btn\">Answer</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(QuestionLayout);","import React, {Component} from 'react';\nimport {Context} from '../provider/index';\nimport { Link } from 'react-router-dom';\n\nimport io from 'socket.io-client';\n\nclass UsersPanel extends Component {\n    state = {\n        onlineUsers: []\n    }\n\n    static contextType = Context;\n\n    componentDidMount() {\n        this.context.getCurrentUser() //added this dangerous line\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n        this.socket.on('connect', () => {\n            this.socket.emit('web:online', this.context.user)\n        })\n        this.socket.on('loginEvent', (onlineUsers) => {\n            console.log('new useer added', onlineUsers)\n            this.setState({\n                onlineUsers\n            })\n        })\n        this.socket.on('userDisconnect', (onlineUsers) => {\n            this.setState({\n                onlineUsers\n            })\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"col s3 top-space\">\n                <div className=\"row no-margin\">\n                    <div className=\"col s11 push-s1 center-align users-panel\">\n                        <div className=\"row no-margin user-box-title\">\n                            <div className=\"col s12\">\n                                <span>Connected users</span>\n                            </div>\n                        </div>\n    \n                        <div className=\"row\">\n                            <div className=\"col s12\">\n                                <ul class=\"collection users-collection\">\n                                    {\n                                        this.state.onlineUsers.map( user => {\n                                            console.log(user)\n                                            if(this.context.friendsIDs) {\n                                                if(this.context.friendsIDs.includes(user.id) || this.context.user._id === user.id) {\n                                                    return (\n                                                        <li class=\"collection-item avatar\">\n                                                            <img src={user.img} alt=\"\" class=\"circle\" />\n                                                            {\n                                                                this.context.user._id === user.id ?\n                                                                <span class=\"title\">{user.name} (Me)</span>\n                                                                :\n                                                                <span class=\"title\">{user.name}</span>\n                                                            }\n                                                            <p className=\"online-text\">online</p>\n                                                            <Link to={`/chat/${this.context.user._id}/${user.id}`} class=\"secondary-content\"><i className=\"material-icons send-icon\">send</i></Link>\n                                                        </li>\n                                                    )\n                                                }\n                                            }\n                                        })\n                                    }\n                                    {/* <li class=\"collection-item avatar\">\n                                        <i class=\"material-icons circle\">folder</i>\n                                        <span class=\"title\">Title</span>\n                                        <p>First Line</p>\n                                        <Link to={`/chat/${this.context.user._id}/5d426ffdcd6387450240c352`} class=\"secondary-content\"><i class=\"material-icons\">send</i></Link>\n                                    </li>\n                                    <li class=\"collection-item avatar\">\n                                        <i class=\"material-icons circle green\">insert_chart</i>\n                                        <span class=\"title\">Title</span>\n                                        <p>First Line</p>\n                                        <Link to={`/chat/${this.context.user._id}/5d426ffdcd6387450240c352`} class=\"secondary-content\"><i class=\"material-icons\">send</i></Link>\n                                    </li>\n                                    <li class=\"collection-item avatar\">\n                                        <i class=\"material-icons circle red\">play_arrow</i>\n                                        <span class=\"title\">Title</span>\n                                        <p>First Line</p>\n                                        <Link to={`/chat/${this.context.user._id}/5d426ffdcd6387450240c352`} class=\"secondary-content\"><i class=\"material-icons\">send</i></Link>\n                                    </li> */}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UsersPanel;","import React, { Component, Fragment } from 'react';\nimport Service from '../services';\nimport { Context } from '../provider/index';\nimport axios from 'axios';\n\nimport Header from '../header/Header';\nimport SideNav from './SideNav';\nimport PostLayout from './PostLayout';\nimport ProfileLayout from '../profile/Profile';\nimport QuestionLayout from './QuestionLayout';\nimport UsersPanel from './UsersPanel';\n\nclass Main extends Component {\n    state = {\n        feed: [],\n        public: [],\n        postForm: false,\n        activity: null\n    }\n\n    static contextType = Context\n\n    getUserLocation =  () => {\n        if (navigator.geolocation) {\n            this.service = new Service();\n            navigator.geolocation.getCurrentPosition( (position) => {\n\n                axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${position.coords.latitude}+${position.coords.longitude}&key=614cbe4035a04205bc7d3451acfe5004`)\n                    .then(res => {\n                        const components = res.data.results[0].components\n\n                        const county = components.county\n                        const state = components.state_code\n                        console.log(res)\n                        // this.setState({\n                        //     location: {\n                        //         county,\n                        //         state\n                        //     },\n                        //     loading: false\n                        // })\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            }, (error) => {\n                if (error.code == error.PERMISSION_DENIED) {\n                    // this.setState({\n                    //     location: null,\n                    //     loading: false\n                    // })\n\n                    console.log(\"You denied Geolocation\")\n                }\n            })  \n\n        } else {\n            console.log('Geolocation is not supported');\n        }\n        \n    }\n\n    componentDidMount() {\n        this.getInfo()\n        // this.getUserLocation()\n        // window.dropdownTrigger()\n    }\n\n    getInfo = async () => {\n        this.service = new Service()\n        const res1 = await this.service.getFeedPosts();\n        const res2 = await this.service.getPublicPosts();\n        console.log('context user', this.context)\n        if(this.context.user) {\n            const res3 = await this.service.getUserActivity(this.context.user._id)\n            const feed = res1.data.posts.filter( post => {\n                return this.context.friendsIDs.includes(post.owner._id) || this.context.user._id === post.owner._id\n            })\n            this.setState({\n                feed,\n                public: res2.data.posts,\n                activity: res3.data.activity\n            })\n        } else {\n            this.setState({\n                // feed,\n                public: res2.data.posts\n            })\n        }\n        // const feed = res1.data.posts.filter( post => {\n        //     return this.context.friendsIDs.includes(post.owner._id) || this.context.user._id === post.owner._id\n        // })\n    }\n\n    getFeedPosts = async () => {\n        this.service = new Service()\n        const res = await this.service.getFeedPosts();\n        const feed = res.data.posts.filter( post => {\n            return this.context.friendsIDs.includes(post.owner._id) || this.context.user._id === post.owner._id\n        })\n        this.setState({\n            feed,\n            postForm: false\n        })\n    }\n\n    getPublicPosts = async () => {\n        this.service = new Service()\n        const res = await this.service.getPublicPosts();\n        this.setState({\n            public: res.data.posts,\n            postForm: false\n        })\n    }\n    \n    renderHomepage = () => {\n        if(this.props.match.path === \"/feed\") {\n            return <PostLayout posts={this.state.feed} postForm={this.state.postForm} togglePostForm={this.togglePostForm} setPostForm={this.setPostForm} handlePostSubmit={this.handlePostSubmit} updatePost={this.updatePost} deletePost={this.deletePost} />\n        } else if(this.props.match.path === \"/public\") {\n            return <PostLayout posts={this.state.public} postForm={this.state.postForm} togglePostForm={this.togglePostForm} setPostForm={this.setPostForm} handlePostSubmit={this.handlePostSubmit} updatePost={this.updatePost} deletePost={this.deletePost} />\n        } else if(this.props.match.path === \"/profile\") {\n            return <ProfileLayout activity={this.state.activity} />\n        } else if(this.props.match.path === \"/question/:id\") {\n            return <QuestionLayout />\n        }\n    }\n\n    togglePostForm = () => {\n        this.setState({\n            postForm: !this.state.postForm\n        })\n    }\n\n    handlePostSubmit = (ev) => {\n        ev.preventDefault();\n        this.service = new Service()\n\n        const form = new FormData(ev.target);\n        const title = form.get('title');\n        const description = form.get('description');\n\n        this.service.createPost(title, description)\n            .then( res => {\n                if(this.props.match.path === \"/feed\") {\n                    this.postForm.reset()\n                    this.getFeedPosts()\n                } else if(this.props.match.path === \"/public\") {\n                    this.postForm.reset()\n                    this.getPublicPosts()\n                }\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    setPostForm = (el) => {\n        this.postForm = el;\n    }\n\n    updatePost = (postInfo, cb) => {\n        this.service = new Service();\n        this.service.updatePost(postInfo)\n            .then( res => {\n                if(this.props.match.path === \"/feed\") {\n                    cb()\n                }\n\n                if(this.props.match.path === \"/public\") {\n                    cb()\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    deletePost = (id) => {\n        this.service = new Service()\n        this.service.deletePost(id)\n            .then( res => {\n                if(this.props.match.path === \"/feed\") {\n                    this.getFeedPosts()\n                }\n\n                if(this.props.match.path === \"/public\") {\n                    this.getPublicPosts()\n                }\n            } )\n    }\n\n    isActiveNav = (match, location) => {\n        if(location.pathname === \"/feed\") return true\n        return false\n    }\n    \n    render() {\n        return (\n            <Fragment>\n                <Header passSearchData={this.passSearchData} />\n                <div className=\"my-container\">\n                    <div className=\"row\">\n                        <SideNav isActiveNav={this.isActiveNav} />\n\n\n                        {this.renderHomepage()}\n\n                        <UsersPanel />\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default Main;\n","import React, {Component} from 'react';\nimport io from 'socket.io-client';\nimport Services from '../services';\nimport { Context } from '../provider';\n\nclass UserResults extends Component {\n    state = {\n        user: this.props.user,\n        removeButton: false\n    }\n\n    static contextType = Context;\n\n    addFriend = () => {\n        this.services = new Services();\n        this.services.addFriend(this.state.user._id)\n            .then(res => {\n                // In here I dont need to update, because you are waiting the response\n                this.socket.emit('newFriendRequest', {user: this.context.user, friend: this.state.user})\n                this.setState({\n                    removeButton: true\n                })\n            }) .catch(err => {\n                console.log(err)\n            })\n    }\n\n    removeFriend = () => {\n        console.log(this.state.user._id)\n        this.services = new Services();\n        this.services.removeFriend(this.state.user._id)\n            .then( res => {\n                // This is for updating my friend list\n                // this.context.getCurrentUser()\n                console.log(res)\n                this.socket.emit('removedFriendRequest', {user: this.context.user, friend: this.state.user})\n                this.setState({\n                    removeButton: false\n                })\n            })\n            .catch( err => {\n                console.log(err)\n            })\n    }\n\n    componentDidMount() {\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n    }\n\n    render() {\n        return (\n            <ul className=\"collection col s6\">\n                <li className=\"collection-item avatar\">\n                    <img src={this.state.user.img} alt=\"\" className=\"circle\" />\n                    <span className=\"title\">{this.state.user.name}</span>\n                    <p>{this.state.user.username}</p>\n                    {\n                        this.context.user && this.context.friendsIDs && (\n                            this.context.friendsIDs.includes(this.state.user._id) || this.state.removeButton || this.context.user.friends.outcomingRequests.includes(this.state.user._id) ?\n                            <button onClick={this.removeFriend} className=\"btn-flat secondary-content\">Remove</button>\n                            :\n                            <button onClick={this.addFriend} className=\"btn-flat secondary-content\">Add</button>\n                        )\n                    }\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default UserResults;","import React, {Component, Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Context} from '../provider/index';\nimport Services from '../services';\n\nimport Header from '../header/Header';\nimport SideNav from './SideNav';\nimport UsersPanel from './UsersPanel';\nimport UserResults from './UserResults';\n\nclass SearchLayout extends Component {\n    state = {\n        users: null,\n        questions: null\n    }\n\n    static contextType = Context\n\n    searchResults = (data) => {\n        this.services = new Services()\n        this.services.searchResults(data)\n            .then( res => {\n                this.setState({\n                    users: res.data.users,\n                    questions: res.data.questions\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    renderUserResults = () => {\n        if(this.state.users) {\n            return this.state.users.map( (user) => {\n                if(this.context.user) {\n                    if(user._id !== this.context.user._id) {\n                        return (\n                            <UserResults key={user._id} user={user} />\n                        )\n                    }\n                } else {\n                    return (\n                        <UserResults key={user._id} user={user} />\n                    )\n                }\n            })\n        }\n    }\n\n    renderQuestionsResults = () => {\n        if(this.state.questions) {\n            return this.state.questions.map( question => {\n                return (\n                    <Link to={`/question/${question._id}`}>\n                        <div class=\"collection col s11 push-s1 question-result-card\">\n                            <span class=\"title search-question-title\">{question.title}</span>\n                            <p className=\"question-content\">{question.content}</p>\n                            {/* <a href=\"#!\" class=\"secondary-content\">Follow</a> */}\n                        </div>\n                    </Link>\n                )\n            })\n        }\n    }\n\n    componentDidMount() {\n        const query = this.props.location.search.split('?q=')[1]\n        console.log(query)\n        this.searchResults(query)\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if(this.props.location.search !== nextProps.location.search) {\n            console.log(nextProps.location.search.split('?q=')[1])\n            this.searchResults(nextProps.location.search.split('?q=')[1])\n            return true\n        }\n\n        return false\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Header />\n                <div className=\"my-container\">\n                    <div className=\"row\">\n                        <SideNav />\n                        <div className=\"col s7\">\n                            <div className=\"row\">\n                                <div className=\"row no-margin\">\n                                    <h4 className=\"results-title\">Results for Users:</h4>\n                                </div>\n                \n                                <div className=\"row no-margin\">\n                                    {this.renderUserResults()}\n                                </div>\n                            </div>\n                \n                            <div className=\"row\">\n                                <div className=\"row no-margin\">\n                                    <h4 className=\"results-title\">Results for Questions:</h4>\n                                </div>\n                \n                                <div className=\"row no-margin\">\n                                    {this.renderQuestionsResults()}\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            this.context.user &&\n                            <UsersPanel />\n                        }\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default SearchLayout","import React, {Component, Fragment} from 'react';\nimport Header from '../header/Header';\nimport Loader from '../widgets/Loader';\nimport Services from '../services';\n\nimport './chat-style.css';\nimport io from 'socket.io-client';\n\nclass ChatLayout extends Component {\n    state = {\n        emitter: '',\n        receiver: '',\n        room: '',\n        loading: true\n    }\n    \n    async componentDidMount() {\n        this.services = new Services()\n        this.socket = io(process.env.REACT_APP_CONNECTSERVER)\n        try {\n            const res1 = await this.services.getUserById(this.props.match.params.userEmitter)\n            const res2 = await this.services.getUserById(this.props.match.params.userReceiver)\n\n            const users = {\n                emitter: res1.data.user, \n                receiver: res2.data.user\n            }\n\n            this.socket.emit('chat:online', users, (room) => {\n                console.log(room)\n                this.setState({\n                    emitter: res1.data.user,\n                    receiver: res2.data.user,\n                    room,\n                    loading: false\n                })\n            })\n            \n        } catch(err) {\n            console.log(err)\n        }\n        // this.socket.on('connect', () => {\n        //     console.log('conectado al servidor')\n        // })\n    }\n    // https://sergui-test-chat.herokuapp.com/?nombre=sergui&sala=ironhack&friend=Marcos\n\n    render() {\n        return (\n            <Fragment>\n                <Header />\n                {\n                    this.state.loading ?\n                    <Loader />\n                    :\n                    <iframe className=\"chat-box\" src={`https://sergui-test-chat.herokuapp.com/?nombre=${this.state.emitter.name}&sala=${this.state.room}&friend=${this.state.receiver.name}`} />\n                }\n                {/* <div className=\"chat-section\">\n                    <div className=\"chat-container\">\n                        <div className=\"row chat-row\">\n                            <div className=\"col s3 friends-col\">\n                                <div className=\"row no-margin\">\n                                    <div className=\"col s12 search-friends-container\">\n                                        <input placeholder=\"Search Friends\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col s12\">\n                                        <ul class=\"collection\">\n                                            <li class=\"collection-item collection-title avatar\">\n                                                <span>Your friends</span>\n                                            </li>\n                                            <li class=\"collection-item avatar\">\n                                                <img src=\"images/yuna.jpg\" alt=\"\" class=\"circle\" />\n                                                <span class=\"title\">Sergui Morejon</span>\n                                                <p className=\"online-text\">online</p>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col s9\">\n                                <div className=\"row no-margin chat-title-row\">\n                                    <div className=\"col s12\">\n                                        <h4 className=\"no-margin\">Chat de Sergui con Mario</h4>\n                                    </div>\n                                </div>\n\n                                <div className=\"row chat-msg-row\">\n                                    <div className=\"col s12\">\n                                    <ul class=\"chat-list p-20\" id=\"divChatbox\">\n                                        <li class=\"message-reverse\">\n                                            <div class=\"chat-content\">\n                                                <h5>sergui20</h5>\n                                                <div className=\"message-send\">\n                                                    <span>Que coool</span>\n                                                </div>\n                                            </div>\n                                            <div class=\"chat-img\">\n                                                <img src=\"/assets/user-pic.png\" alt=\"user\" className=\"circle\" width=\"25px\" />\n                                            </div>\n                                            <div class=\"chat-time\">\n                                                17:42\n                                            </div>\n                                        </li>\n\n                                        <li className=\"message\">\n                                            <div className=\"user-receiver\">\n                                                <div className=\"chat-img\">\n                                                    <img src=\"/assets/user-pic.png\" alt=\"user\" className=\"circle\" width=\"25px\" />\n                                                </div>\n                                                <div className=\"chat-content\">\n                                                    <h5>God</h5>\n                                                    <div className=\"message-receive\">\n                                                        <span>Hey</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"chat-time\">\n                                                20:18\n                                            </div>\n                                        </li>\n\n                                    </ul>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col s12\">\n                                        <div className=\"row\">\n                                            <div className=\"col s10\">\n                                                <input placeholder=\"Write your message\"></input>\n                                            </div>\n\n                                            <div className=\"col s2 center-align btn-container\">\n                                                <button className=\"btn send-btn\"><i class=\"material-icons\">send</i></button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                </div> */}\n            </Fragment>\n        )\n    }\n}\n\nexport default ChatLayout;","import React from 'react';\nimport reactDOM from 'react-dom';\n\nimport './footer.css'\n\nconst footer = document.getElementById('footer');\n\nfunction Footer() {\n    return (\n        reactDOM.createPortal(\n            <div className=\"container\">\n                <div className=\"row no-margin footer-row\">\n                    <div className=\"col s4 left-align\">\n                        <img src=\"/assets/whiteLogo.png\" width=\"300px\" />\n                    </div>\n\n                    <div className=\"col s4 center-align\">\n                        <ul className=\"footer-ul\">\n                            <li>About</li>\n                            <li>Questions</li>\n                            <li>Jobs</li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col s4 follow-us-col\">\n                        <div className=\"row no-margin\">\n                            <div className=\"col s12\">\n                                <div className=\"row no-margin\">\n                                    <div className=\"col s12 center-align\">\n                                        <h5 className=\"footer-title\">Follow us</h5>\n                                    </div>\n                                </div>\n\n                                <div className=\"row no-margin\">\n                                    <div className=\"col s12\">\n                                        <img className=\"social-network-footer\" src=\"/assets/social-networks.png\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>,\n            footer\n        )\n    )\n}\n\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Landing from './components/landing/Landing';\nimport Main from './components/homepage/Main';\nimport SearchLayout from './components/homepage/SearchLayout';\nimport ChatLayout from './components/chat/ChatLayout';\nimport Footer from './components/footer/Footer';\nimport {Provider, Context} from './components/provider/index';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst section1 = document.getElementById('section1');\n\nReactDOM.render(\n    <Provider>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route exact path=\"/search\" component={SearchLayout}></Route>\n                <Route exact path=\"/public\" component={Main}></Route>\n                <Route exact path=\"/question/:id\" component={Main}></Route>\n                <Context.Consumer>\n                    {(context) => {\n                        if (context.user) {\n                            return (\n                                <Fragment>\n                                    <Route exact path=\"/feed\" component={Main}></Route>\n                                    <Route exact path=\"/profile\" component={Main}></Route>\n                                    <Route exact path=\"/chat/:userEmitter/:userReceiver\" component={ChatLayout}></Route>\n                                </Fragment>\n                            )\n                        } else {\n                            return (\n                                <Redirect to=\"/\"></Redirect>\n                            )\n                        } \n                    }}\n                </Context.Consumer>\n            </Switch>\n            <Footer />\n        </BrowserRouter>\n    </Provider>,\n    section1\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}